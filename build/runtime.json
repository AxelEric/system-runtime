{
	"models": {
		"19fe71f8af13886": {
			"_id": "19fe71f8af13886",
			"_name": "Worker",
			"_schema": "Worker",
			"_inherit": [
				"RuntimeComponent"
			],
			"_core": true,
			"worker": {
				"type": "object",
				"readOnly": false,
				"mandatory": false,
				"default": {}
			},
			"send": {
				"params": [
					{
						"name": "message",
						"type": "object"
					}
				]
			}
		},
		"138a81fa1f16435": {
			"_id": "138a81fa1f16435",
			"_name": "RuntimeAdmin",
			"_schema": "RuntimeAdmin",
			"_inherit": [
				"RuntimeComponent"
			],
			"_core": true,
			"start": {
				"params": [
					{
						"name": "path",
						"type": "string",
						"mandatory": false,
						"default": ""
					}
				]
			},
			"stop": {}
		},
		"135c71078810af2": {
			"_id": "135c71078810af2",
			"_name": "RuntimeChannel",
			"_schema": "RuntimeChannel",
			"_inherit": [
				"RuntimeComponent"
			],
			"sync": {},
			"loadSystem": {
				"params": [
					{
						"name": "system",
						"type": "object"
					}
				]
			},
			"createSchema": {
				"params": [
					{
						"name": "id",
						"type": "string"
					},
					{
						"name": "schema",
						"type": "object"
					}
				]
			},
			"updateSchema": {
				"params": [
					{
						"name": "id",
						"type": "string"
					},
					{
						"name": "schema",
						"type": "object"
					}
				]
			},
			"deleteSchema": {
				"params": [
					{
						"name": "id",
						"type": "string"
					}
				]
			},
			"createModel": {
				"params": [
					{
						"name": "id",
						"type": "string"
					},
					{
						"name": "model",
						"type": "object"
					}
				]
			},
			"updateModel": {
				"params": [
					{
						"name": "id",
						"type": "string"
					},
					{
						"name": "model",
						"type": "object"
					}
				]
			},
			"deleteModel": {
				"params": [
					{
						"name": "id",
						"type": "string"
					}
				]
			},
			"createType": {
				"params": [
					{
						"name": "id",
						"type": "string"
					},
					{
						"name": "type",
						"type": "object"
					}
				]
			},
			"updateType": {
				"params": [
					{
						"name": "id",
						"type": "string"
					},
					{
						"name": "type",
						"type": "object"
					}
				]
			},
			"deleteType": {
				"params": [
					{
						"name": "id",
						"type": "string"
					}
				]
			},
			"createComponent": {
				"params": [
					{
						"name": "collection",
						"type": "string"
					},
					{
						"name": "component",
						"type": "object"
					}
				]
			},
			"updateComponent": {
				"params": [
					{
						"name": "id",
						"type": "string"
					},
					{
						"name": "collection",
						"type": "string"
					},
					{
						"name": "component",
						"type": "object"
					}
				]
			},
			"deleteComponent": {
				"params": [
					{
						"name": "id",
						"type": "string"
					},
					{
						"name": "collection",
						"type": "string"
					}
				]
			},
			"createBehavior": {
				"params": [
					{
						"name": "behavior",
						"type": "object"
					}
				]
			},
			"updateBehavior": {
				"params": [
					{
						"name": "id",
						"type": "string"
					},
					{
						"name": "behavior",
						"type": "object"
					}
				]
			},
			"deleteBehavior": {
				"params": [
					{
						"name": "id",
						"type": "string"
					}
				]
			},
			"_core": true,
			"send": {
				"params": [
					{
						"name": "message",
						"type": "object"
					}
				]
			}
		},
		"14c7c105b31a160": {
			"_id": "14c7c105b31a160",
			"_name": "Runtime",
			"load": {
				"params": [
					{
						"name": "url",
						"type": "string"
					},
					{
						"name": "async",
						"type": "boolean",
						"mandatory": false,
						"default": true
					}
				]
			},
			"ready": {},
			"_core": true,
			"version": {
				"type": "string",
				"readOnly": true,
				"mandatory": true,
				"default": "0.0.0"
			},
			"warning": {
				"params": [
					{
						"name": "message",
						"type": "string"
					}
				]
			},
			"system": {
				"params": [
					{
						"name": "name",
						"type": "string",
						"mandatory": false
					}
				],
				"result": "object"
			}
		},
		"1dc9b149d2160ed": {
			"_name": "RuntimeBehavior",
			"_core": true,
			"core": {
				"type": "boolean",
				"readOnly": false,
				"mandatory": false,
				"default": false
			},
			"useCoreAPI": {
				"type": "boolean",
				"readOnly": false,
				"mandatory": false,
				"default": false
			},
			"component": {
				"type": "string",
				"readOnly": false,
				"mandatory": true,
				"default": ""
			},
			"action": {
				"type": "javascript",
				"readOnly": false,
				"mandatory": true,
				"default": ""
			},
			"state": {
				"type": "string",
				"readOnly": false,
				"mandatory": true,
				"default": ""
			},
			"_id": "1dc9b149d2160ed"
		},
		"188251b8901d354": {
			"_name": "RuntimeClassInfo",
			"_core": true,
			"metamodel": {
				"type": "object",
				"readOnly": true,
				"mandatory": true,
				"default": {}
			},
			"model": {
				"type": "object",
				"readOnly": true,
				"mandatory": true,
				"default": {}
			},
			"property": {
				"params": [
					{
						"name": "name",
						"type": "string"
					}
				],
				"result": "object"
			},
			"properties": {
				"result": "array"
			},
			"link": {
				"params": [
					{
						"name": "name",
						"type": "string"
					}
				],
				"result": "object"
			},
			"links": {
				"result": "array"
			},
			"method": {
				"params": [
					{
						"name": "name",
						"type": "string"
					}
				],
				"result": "object"
			},
			"methods": {
				"result": "array"
			},
			"collection": {
				"params": [
					{
						"name": "name",
						"type": "string"
					}
				],
				"result": "object"
			},
			"collections": {
				"result": "array"
			},
			"event": {
				"params": [
					{
						"name": "name",
						"type": "string"
					}
				],
				"result": "object"
			},
			"events": {
				"result": "array"
			},
			"_id": "188251b8901d354"
		},
		"1f8de1dd8715e79": {
			"_name": "RuntimeComponent",
			"_core": true,
			"on": {
				"params": [
					{
						"name": "state",
						"type": "string"
					},
					{
						"name": "handler",
						"type": "function"
					},
					{
						"name": "useCoreAPI",
						"type": "boolean",
						"mandatory": false
					}
				]
			},
			"off": {
				"params": [
					{
						"name": "state",
						"type": "string",
						"mandatory": false
					},
					{
						"name": "behaviorId",
						"type": "string",
						"mandatory": false
					}
				]
			},
			"require": {
				"params": [
					{
						"name": "id",
						"type": "string"
					}
				]
			},
			"destroy": {
				"params": []
			},
			"classInfo": {
				"type": "@RuntimeClassInfo",
				"readOnly": false,
				"mandatory": false,
				"default": {}
			},
			"init": {
				"params": [
					{
						"name": "conf",
						"type": "object"
					}
				]
			},
			"error": {
				"params": [
					{
						"name": "data",
						"type": "errorParam"
					}
				]
			},
			"_id": "1f8de1dd8715e79"
		},
		"1eaf01ad1d19118": {
			"_name": "RuntimeDatabase",
			"_core": true,
			"system": {
				"params": [
					{
						"name": "system",
						"type": "object",
						"mandatory": false
					}
				],
				"result": "string"
			},
			"subsystem": {
				"params": [
					{
						"name": "params",
						"type": "object"
					}
				],
				"result": "string"
			},
			"collections": {
				"result": "object"
			},
			"insert": {
				"params": [
					{
						"name": "classId",
						"type": "string"
					},
					{
						"name": "object",
						"type": "object"
					}
				]
			},
			"update": {
				"params": [
					{
						"name": "schema",
						"type": "string"
					},
					{
						"name": "componentId",
						"type": "string"
					},
					{
						"name": "attributeName",
						"type": "string"
					},
					{
						"name": "attributeValue",
						"type": "object"
					}
				]
			},
			"remove": {
				"params": [
					{
						"name": "classId",
						"type": "string"
					},
					{
						"name": "object",
						"type": "string"
					}
				]
			},
			"_id": "1eaf01ad1d19118"
		},
		"117f01110b15b50": {
			"_name": "RuntimeMessage",
			"_core": true,
			"event": {
				"type": "string",
				"readOnly": false,
				"mandatory": true,
				"default": ""
			},
			"from": {
				"type": "string",
				"readOnly": false,
				"mandatory": true,
				"default": ""
			},
			"data": {
				"type": "array",
				"readOnly": false,
				"mandatory": true,
				"default": []
			},
			"_id": "117f01110b15b50"
		},
		"121101adff186aa": {
			"_name": "RuntimeMetamodel",
			"_core": true,
			"schema": {
				"params": [
					{
						"name": "schema",
						"type": "object"
					}
				]
			},
			"model": {
				"params": [
					{
						"name": "model",
						"type": "object"
					}
				]
			},
			"type": {
				"params": [
					{
						"name": "type",
						"type": "object"
					}
				]
			},
			"create": {
				"params": []
			},
			"_id": "121101adff186aa"
		},
		"188ea1f59813cfa": {
			"_name": "RuntimeState",
			"_core": true,
			"name": {
				"type": "string",
				"readOnly": false,
				"mandatory": true,
				"default": ""
			},
			"parameters": {
				"type": "object",
				"readOnly": false,
				"mandatory": false,
				"default": {}
			},
			"_id": "188ea1f59813cfa"
		},
		"1d2fd1e77c19953": {
			"_name": "RuntimeSystem",
			"_core": true,
			"name": {
				"type": "string",
				"readOnly": false,
				"mandatory": true,
				"default": ""
			},
			"master": {
				"type": "boolean",
				"readOnly": false,
				"mandatory": false,
				"default": false
			},
			"subsystem": {
				"type": "boolean",
				"readOnly": false,
				"mandatory": false,
				"default": false
			},
			"version": {
				"type": "string",
				"readOnly": false,
				"mandatory": false,
				"default": "0.0.1"
			},
			"description": {
				"type": "string",
				"readOnly": false,
				"mandatory": false,
				"default": ""
			},
			"schemas": {
				"type": "object",
				"readOnly": false,
				"mandatory": false,
				"default": {}
			},
			"models": {
				"type": "object",
				"readOnly": false,
				"mandatory": false,
				"default": {}
			},
			"behaviors": {
				"type": "object",
				"readOnly": false,
				"mandatory": false,
				"default": {}
			},
			"types": {
				"type": "object",
				"readOnly": false,
				"mandatory": false,
				"default": {}
			},
			"components": {
				"type": "object",
				"readOnly": false,
				"mandatory": false,
				"default": {}
			},
			"ready": {},
			"sync": {},
			"main": {},
			"_id": "1d2fd1e77c19953"
		}
	},
	"schemas": {
		"155ab18d911ad9f": {
			"_id": "155ab18d911ad9f",
			"_name": "Worker",
			"_inherit": [
				"RuntimeComponent"
			],
			"_core": true,
			"worker": "property",
			"send": "method"
		},
		"10374180581a41f": {
			"_id": "10374180581a41f",
			"_name": "RuntimeAdmin",
			"_inherit": [
				"RuntimeComponent"
			],
			"_core": true,
			"start": "method",
			"stop": "method"
		},
		"104ad1f48518376": {
			"_id": "104ad1f48518376",
			"_name": "RuntimeChannel",
			"sync": "event",
			"loadSystem": "event",
			"createSchema": "event",
			"updateSchema": "event",
			"deleteSchema": "event",
			"createModel": "event",
			"updateModel": "event",
			"deleteModel": "event",
			"createType": "event",
			"updateType": "event",
			"deleteType": "event",
			"createComponent": "event",
			"updateComponent": "event",
			"deleteComponent": "event",
			"createBehavior": "event",
			"updateBehavior": "event",
			"deleteBehavior": "event",
			"_inherit": [
				"RuntimeComponent"
			],
			"_core": true,
			"send": "event"
		},
		"12e211d4cd120a6": {
			"_id": "12e211d4cd120a6",
			"_name": "Runtime",
			"load": "method",
			"ready": "event",
			"_inherit": [
				"RuntimeComponent"
			],
			"_core": true,
			"version": "property",
			"system": "method",
			"warning": "event"
		},
		"1e9fd1d2fa143cb": {
			"_name": "RuntimeBehavior",
			"_inherit": [
				"RuntimeComponent"
			],
			"_core": true,
			"core": "property",
			"component": "property",
			"action": "property",
			"state": "property",
			"useCoreAPI": "property",
			"_id": "1e9fd1d2fa143cb"
		},
		"1dd451044c1dd88": {
			"_name": "RuntimeClassInfo",
			"_inherit": [
				"RuntimeComponent"
			],
			"_core": true,
			"model": "property",
			"metamodel": "property",
			"method": "method",
			"methods": "method",
			"property": "method",
			"properties": "method",
			"link": "method",
			"links": "method",
			"collections": "method",
			"collection": "method",
			"event": "method",
			"events": "method",
			"_id": "1dd451044c1dd88"
		},
		"1619e162d6116cf": {
			"_name": "RuntimeComponent",
			"_inherit": [],
			"_core": true,
			"classInfo": "property",
			"on": "method",
			"off": "method",
			"require": "method",
			"destroy": "method",
			"init": "method",
			"error": "event",
			"_id": "1619e162d6116cf"
		},
		"18223183501702d": {
			"_name": "RuntimeDatabase",
			"_inherit": [
				"RuntimeComponent"
			],
			"_core": true,
			"system": "method",
			"subsystem": "method",
			"collections": "method",
			"insert": "event",
			"update": "event",
			"remove": "event",
			"_id": "18223183501702d"
		},
		"1a57617b901a565": {
			"_name": "RuntimeMessage",
			"_inherit": [],
			"_core": true,
			"event": "property",
			"from": "property",
			"data": "property",
			"_id": "1a57617b901a565"
		},
		"1d16417e781612b": {
			"_name": "RuntimeMetamodel",
			"_inherit": [
				"RuntimeComponent"
			],
			"_core": true,
			"schema": "method",
			"model": "method",
			"type": "method",
			"create": "method",
			"_id": "1d16417e781612b"
		},
		"1a5451fc6112525": {
			"_name": "RuntimeState",
			"_inherit": [],
			"_core": true,
			"_class": false,
			"name": "property",
			"parameters": "property",
			"_id": "1a5451fc6112525"
		},
		"159551aabe16a37": {
			"_name": "RuntimeSystem",
			"_inherit": [
				"RuntimeComponent"
			],
			"_core": true,
			"name": "property",
			"master": "property",
			"subsystem": "property",
			"version": "property",
			"description": "property",
			"schemas": "property",
			"models": "property",
			"behaviors": "property",
			"types": "property",
			"components": "property",
			"sync": "method",
			"main": "method",
			"ready": "event",
			"_id": "159551aabe16a37"
		}
	},
	"types": {
		"html": {
			"name": "html",
			"type": "string",
			"core": true
		},
		"css": {
			"name": "css",
			"type": "string",
			"core": true
		},
		"collection": {
			"name": "collection",
			"type": "object",
			"schema": {
				"type": {
					"type": [
						"string"
					],
					"mandatory": true
				},
				"readOnly": {
					"type": "boolean",
					"mandatory": true
				},
				"mandatory": {
					"type": "boolean",
					"mandatory": true
				},
				"default": {
					"type": "object",
					"mandatory": true
				}
			},
			"core": true
		},
		"errorParam": {
			"name": "errorParam",
			"type": "object",
			"schema": {
				"message": {
					"type": "string",
					"mandatory": true
				},
				"error": {
					"type": "object",
					"mandatory": true
				}
			},
			"core": true
		},
		"event": {
			"name": "event",
			"type": "object",
			"schema": {
				"params": {
					"type": [
						"parameter"
					],
					"mandatory": false
				}
			},
			"core": true
		},
		"javascript": {
			"name": "javascript",
			"type": "string",
			"core": true
		},
		"json": {
			"name": "json",
			"type": "string",
			"core": true
		},
		"link": {
			"name": "link",
			"type": "object",
			"schema": {
				"type": {
					"type": "string",
					"mandatory": true
				},
				"readOnly": {
					"type": "boolean",
					"mandatory": true
				},
				"mandatory": {
					"type": "boolean",
					"mandatory": true
				},
				"default": {
					"type": "@type",
					"mandatory": true
				}
			},
			"core": true
		},
		"message": {
			"name": "message",
			"type": "object",
			"schema": {
				"event": {
					"type": "string",
					"mandatory": true
				},
				"from": {
					"type": "string",
					"mandatory": false
				},
				"data": {
					"type": "object",
					"mandatory": true
				}
			},
			"core": true
		},
		"method": {
			"name": "method",
			"type": "object",
			"schema": {
				"result": {
					"type": "string",
					"mandatory": false
				},
				"params": {
					"type": [
						"parameter"
					],
					"mandatory": false
				}
			},
			"core": true
		},
		"parameter": {
			"name": "parameter",
			"type": "object",
			"schema": {
				"name": {
					"type": "string",
					"mandatory": true
				},
				"type": {
					"type": "string",
					"mandatory": true
				},
				"mandatory": {
					"type": "boolean",
					"mandatory": false
				},
				"default": {
					"type": "@type",
					"mandatory": false
				}
			},
			"core": true
		},
		"property": {
			"name": "property",
			"type": "object",
			"schema": {
				"type": {
					"type": "string",
					"mandatory": true
				},
				"readOnly": {
					"type": "boolean",
					"mandatory": true
				},
				"mandatory": {
					"type": "boolean",
					"mandatory": true
				},
				"default": {
					"type": "@type",
					"mandatory": true
				}
			},
			"core": true
		}
	},
	"behaviors": {
		"1c00c107e01c9b3": {
			"_id": "1c00c107e01c9b3",
			"component": "RuntimeAdmin",
			"state": "start",
			"action": "function start(path) {\n    var Worker = null,\n    worker = null,\n    workerPath = '',\n    RuntimeChannel = null,\n    runtimeChannel = null;\n    \n    if (path) {\n        workerPath = path + '/scripts/worker.js';\n        workerPath = workerPath.replace(/\\/\\//g,'/');\n    } else {\n        workerPath = '/designer/scripts/worker.js';\n    }\n    \n    if (typeof SharedWorker !== 'undefined') {\n        \n        if (!this.require('channel-admin')) {\n            RuntimeChannel = this.require('RuntimeChannel');\n            runtimeChannel = new RuntimeChannel({\n                '_id': 'channel-admin',\n                '_core': true\n            });\n            \n            runtimeChannel.on('send', function send(message) {\n                this.require('worker-admin').worker().port.postMessage(message);\n            });\n            \n            // schema change events\n            runtimeChannel.on('createSchema', function createSchema(id, schema) {\n                this.require('metamodel').schema(schema);\n                this.require('metamodel').create();\n            }, true);\n            \n            runtimeChannel.on('updateSchema', function updateSchema(id, schema) {\n                 this.require('metamodel').type(schema);\n                 this.require('metamodel').create();\n            }, true);\n            \n            runtimeChannel.on('deleteSchema', function deleteSchema(id) {\n                $db['Runtime'].remove({'_id': id});\n                this.require('metamodel').create();\n            }, true);\n            \n            // model change events\n            runtimeChannel.on('createModel', function createModel(id, model) {\n                this.require('metamodel').schema(model);\n                this.require('metamodel').create();\n            }, true);\n            \n            runtimeChannel.on('updateModel', function updateModel(id, model) {\n                 this.require('metamodel').type(model);\n                 this.require('metamodel').create();\n            }, true);\n            \n            runtimeChannel.on('deleteModel', function deleteModel(id) {\n                $db['Runtime'].remove({'_id': id});\n                this.require('metamodel').create();\n                $component.removeFromMemory(id);\n            }, true);\n            \n            // type change events\n            runtimeChannel.on('createType', function createType(id, type) {\n                this.require('metamodel').type(type);\n                this.require('metamodel').create();\n            }, true);\n            \n            runtimeChannel.on('updateType', function updateType(id, type) {\n                 this.require('metamodel').type(type);\n                 this.require('metamodel').create();\n            }, true);\n            \n            runtimeChannel.on('deleteType', function deleteType(id) {\n                $db['RuntimeType'].remove({'_id': id});\n                this.require('metamodel').create();\n            }, true);\n            \n            // component change events\n            runtimeChannel.on('createComponent', function createComponent(model, component) {\n                $db[model].insert(component);\n            }, true);\n            \n            runtimeChannel.on('updateComponent', function updateComponent(id, collection, component) {\n                $db[collection].update({'_id': id}, component);\n            }, true);\n            \n            runtimeChannel.on('deleteComponent', function deleteComponent(id, collection) {\n                $db[collection].remove({'_id': id});\n            }, true);\n            \n            // behavior change events\n            runtimeChannel.on('createBehavior', function createBehavior(component) {\n                $db['RuntimeBehavior'].insert(component);\n            }, true);\n            runtimeChannel.on('updateBehavior', function updateBehavior(id, behavior) {\n                this.require(id).action(behavior.action);\n            });\n            runtimeChannel.on('deleteBehavior', function deleteBehavior(id) {\n                $db['RuntimeBehavior'].remove({'_id': id});                  \n            }, true);\n         \n            // System Designer event\n            runtimeChannel.on('sync', function sync() {\n                this.loadSystem(JSON.parse(this.require('db').system()));\n            });\n    \n            Worker = this.require('Worker');\n            worker = new Worker({\n                '_id': 'worker-admin',\n                '_core': true,\n                'worker': new SharedWorker(workerPath),\n            });\n            \n            worker.worker().port.onmessage = function (e) {\n              $db.RuntimeMessage.insert(e.data);\n            };\n            \n            console.info('runtime: admin is started');\n        } else {\n            console.info('runtime: admin is already started');\n        }\n    } else {\n        console.info('runtime: the browser can not run admin features');\n    }\n}",
			"useCoreAPI": true,
			"core": true
		},
		"1d7151dd2d1558f": {
			"_id": "1d7151dd2d1558f",
			"component": "RuntimeAdmin",
			"state": "stop",
			"action": "function stop() {\n    var worker = null,\n    channel = null;\n    \n    worker = this.require('worker-admin');\n    if (worker && worker.worker()) {\n        worker.worker().port.onmessage = function () {};\n        worker.destroy();\n        \n        channel = this.require('channel-admin');\n        if (channel) {\n            channel.destroy();\n        }\n        \n        console.info('runtime: admin is stopped');\n    }\n}",
			"useCoreAPI": true,
			"core": true
		},
		"1fc101c23918773": {
			"component": "RuntimeComponent",
			"state": "off",
			"action": "function off(state, behaviorId) {\n    var args = [],\n    i = 0,\n    length = 0;\n    length = arguments.length;\n    \n    for (i = 0; i < length - 6; i++) {\n        args.push(arguments[i]);\n    }\n    \n    if ($workflow.checkParams({\n        \"component\": this, \n        \"methodName\": \"off\", \n        \"args\": args\n        })) {\n        \n        if (state || behaviorId) {\n            if ($metamodel.isValidState(state, this.constructor.name)) {\n                $behavior.remove({\n                    \"behaviorId\": behaviorId, \n                    \"componentId\": this.id(), \n                    \"state\": state\n                });\n            } else { \n                console.warn(\"runtime: invoke \\'off\\' method of component '\" + this.id() + \"' with an invalid state '\" + state + \"'\"); \n            }\n        } else {\n            $behavior.remove({\n                \"componentId\": this.id()\n            });\n        }\n    }\n}",
			"core": true,
			"useCoreAPI": true
		},
		"1aaee1e6311ff39": {
			"_id": "1aaee1e6311ff39",
			"component": "runtime",
			"state": "load",
			"action": "function load(url, async) {\n    var xhr = null,\n    callbackLoad = null;\n    xhr = new XMLHttpRequest();\n    \n    callbackLoad = function callbackLoad(system) {\n        var sysId = $db.system(system),\n        sys = $component.get(sysId),\n        systems = document.querySelectorAll('link[rel=system]'),\n        nbSubsystem = $db.RuntimeSystem.find({\n            'subsystem': true\n        }); \n        if (sys) {\n            sys.main();\n        } \n        if (systems.length + 1 + nbSubsystem.length === $db.RuntimeSystem.count()) {\n            $component.get('runtime').ready();\n        }\n    };\n    \n    if (async) {\n        xhr.open('GET', url, true);\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState === 4) {\n                if (xhr.status === 200) {\n                    callbackLoad(JSON.parse(xhr.response));\n                }\n            }\n        };\n        xhr.send(null);\n    } else {\n        xhr.open('GET', url, false);\n        xhr.send(null);\n        if (xhr.status === 200) {\n            callbackLoad(JSON.parse(xhr.response));\n        }\n    }\n}",
			"core": true,
			"useCoreAPI": true
		},
		"1f6001773a18791": {
			"_id": "1f6001773a18791",
			"component": "e89c617b6b15d24",
			"state": "main",
			"action": "function main() {\n    var subsystems = [],\n    systems = [],\n    system = null,\n    i = 0,\n    length = 0;\n    \n    subsystems = $db.RuntimeSystem.find({\n        'subsystem': true\n    });\n    subsystems.forEach(function (subsystem) {\n        var subsystemId = subsystem._id;\n        this.require(subsystemId).main();\n    }, this); \n    \n    if (typeof document !== 'undefined') {\n        systems = document.querySelectorAll('link[rel=system]');\n        length = systems.length;\n        \n        for (i = 0; i < length; i++) {\n            system = systems[i];\n            \n            if (system.getAttribute('async') === 'false') {\n                this.require('runtime').load(system.href, false);\n            } else {\n                this.require('runtime').load(system.href, true);\n            }\n        }\n        if (length === 0) {\n           this.require('runtime').ready();\n        }\n    }\n}",
			"core": true,
			"useCoreAPI": true
		},
		"102071c99a1bcba": {
			"_id": "102071c99a1bcba",
			"component": "Runtime",
			"state": "error",
			"action": "function error(data) {\n    console.error('runtime: ' + data.message, data.error);\n}",
			"core": true
		},
		"12b621a4081b75f": {
			"_id": "12b621a4081b75f",
			"component": "Runtime",
			"state": "system",
			"action": "function system(name) {\n    var System = null,\n    system = {},\n    systemId = '',\n    result = [],\n    conf = {};\n    \n    if (name) {\n        conf.master = true;\n        conf.name = name;\n        System = this.require('RuntimeSystem');\n        system = new System(conf);\n    } else {\n        result = $db.RuntimeSystem.find({\n            'master': true\n        });\n        if (result.length) {\n            systemId = result[0]._id;\n            system = $component.get(systemId);\n        }\n    }\n    return system;\n}",
			"core": true,
			"useCoreAPI": true
		},
		"1f1f21546e19dd4": {
			"_id": "1f1f21546e19dd4",
			"component": "Runtime",
			"state": "warning",
			"action": "function warning(message) {\n    console.warn('runtime: ' + message);\n}",
			"core": true
		},
		"1e0521faa719b78": {
			"_id": "1e0521faa719b78",
			"component": "RuntimeClassInfo",
			"state": "collection",
			"action": "function collection(name) {\n    var result = {};\n    if (this.metamodel()[name] === 'collection') {\n        result = this.model()[name];\n    } \n    \n    return result; \n}",
			"core": true
		},
		"1e2851ddeb1db4b": {
			"_id": "1e2851ddeb1db4b",
			"component": "RuntimeClassInfo",
			"state": "collections",
			"action": "function collections() {\n    var keys = Object.keys(this.metamodel()),\n    item = '',\n    result = [],\n    i = 0,\n    length = 0;\n    \n    length = keys.length; \n    \n    for (i = 0; i < length; i++) { \n        item = keys[i]; \n        if (this.metamodel()[item] === 'collection') {\n            result.push(item);\n        }\n    }\n    \n    return result;\n}",
			"core": true
		},
		"1f9471c2d618088": {
			"_id": "1f9471c2d618088",
			"component": "RuntimeClassInfo",
			"state": "event",
			"action": "function event(name) {\n    var result = {};\n    \n    if (this.metamodel()[name] === 'event') {\n        result = this.model()[name];\n    } \n    \n    return result;\n}",
			"core": true
		},
		"1a00a1a3a816e37": {
			"_id": "1a00a1a3a816e37",
			"component": "RuntimeClassInfo",
			"state": "events",
			"action": "function events() {\n    var keys = Object.keys(this.metamodel()),\n    item = '',\n    result = [],\n    i = 0,\n    length = 0;\n    \n    length = keys.length;\n    \n    for (i = 0; i < length; i++) {\n        item = keys[i];\n        if (this.metamodel()[item] === 'event') {\n            result.push(item);\n        }\n    } \n    return result;\n}",
			"core": true
		},
		"192a8112821a835": {
			"_id": "192a8112821a835",
			"component": "RuntimeClassInfo",
			"state": "link",
			"action": "function link(name) {\n    var result = {};\n    \n    if (this.metamodel()[name] === 'link') {\n        result = this.model()[name];\n    }\n    return result;\n}",
			"core": true
		},
		"1c9dd1593c1f751": {
			"_id": "1c9dd1593c1f751",
			"component": "RuntimeClassInfo",
			"state": "links",
			"action": "function links() { \n    var keys = Object.keys(this.metamodel()),\n    item = '',\n    result = [],\n    i = 0,\n    length = 0;\n    length = keys.length;\n    \n    for (i = 0; i < length; i++) {\n        item = keys[i];\n        if (this.metamodel()[item] === 'link') {\n            result.push(item);\n        }\n    } return result;\n}",
			"core": true
		},
		"1835a150b619657": {
			"_id": "1835a150b619657",
			"component": "RuntimeClassInfo",
			"state": "method",
			"action": "function method(name) {\n    var result = {};\n    if (this.metamodel()[name] === 'method') {\n        result = this.model()[name];\n        \n    }\n    \n    return result;\n}",
			"core": true
		},
		"1799616bd0154d3": {
			"_id": "1799616bd0154d3",
			"component": "RuntimeClassInfo",
			"state": "methods",
			"action": "function methods() {\n    var keys = Object.keys(this.metamodel()),\n    item = '',\n    result = [],\n    i = 0,\n    length = 0;\n    length = keys.length;\n    for (i = 0; i < length; i++) {\n        item = keys[i];\n        if (this.metamodel()[item] === 'method') {\n            result.push(item);\n        }\n    } \n    \n    return result;\n}",
			"core": true
		},
		"14253149001703f": {
			"_id": "14253149001703f",
			"component": "RuntimeClassInfo",
			"state": "properties",
			"action": "function properties() { \n    var keys = Object.keys(this.metamodel()),\n    item = '',\n    result = [],\n    i = 0,\n    length = 0;\n    length = keys.length;\n    \n    for (i = 0; i < length; i++) {\n        item = keys[i];\n        if (this.metamodel()[item] === 'property') {\n            result.push(item);\n        }\n    } return result;\n}",
			"core": true
		},
		"189271b7a319fc5": {
			"_id": "189271b7a319fc5",
			"component": "RuntimeClassInfo",
			"state": "property",
			"action": "function property(name) {\n    var result = {};\n    \n    if (this.metamodel()[name] === 'property') {\n        result = this.model()[name];\n    }\n    return result;\n}",
			"core": true
		},
		"1b72b1a26e111a8": {
			"_id": "1b72b1a26e111a8",
			"component": "RuntimeComponent",
			"state": "destroy",
			"action": "function destroy() {\n    $component.destroy(this.id());\n}",
			"core": true,
			"useCoreAPI": true
		},
		"1b2e01211b1ccd0": {
			"_id": "1b2e01211b1ccd0",
			"component": "RuntimeComponent",
			"state": "off",
			"action": "function off(state, behaviorId) {\n    var args = [],\n    i = 0,\n    length = 0;\n    length = arguments.length;\n    \n    for (i = 0; i < length - 6; i++) {\n        args.push(arguments[i]);\n    }\n    \n    if ($workflow.checkParams({\n        \"component\": this, \n        \"methodName\": \"off\", \n        \"args\": args\n        })) {\n        \n        if (state || behaviorId) {\n            if ($metamodel.isValidState(state, this.constructor.name)) {\n                $behavior.remove({\n                    \"behaviorId\": behaviorId, \n                    \"componentId\": this.id(), \n                    \"state\": state\n                });\n            } else { \n                console.warn(\"runtime: invoke \\'off\\' method of component '\" + this.id() + \"' with an invalid state '\" + state + \"'\"); \n            }\n        } else {\n            $behavior.remove({\n                \"componentId\": this.id()\n            });\n        }\n    }\n}",
			"core": true,
			"useCoreAPI": true
		},
		"1ea7b19b3219bfe": {
			"_id": "1ea7b19b3219bfe",
			"component": "RuntimeComponent",
			"state": "require",
			"action": "function require(id) {\n    return $component.get(id);\n}",
			"core": true,
			"useCoreAPI": true
		},
		"1a5d61f0de16103": {
			"_id": "1a5d61f0de16103",
			"component": "RuntimeDatabase",
			"state": "collections",
			"action": "function collections() {\n    var result = {},\n    collectionName = '';\n    \n    for (collectionName in $db.store) {\n        if ($db.store.hasOwnProperty(collectionName) && collectionName.indexOf('Runtime') !== 0) {\n            result[collectionName] = $db[collectionName];\n            \n        }\n    }\n    return result;\n}",
			"core": true,
			"useCoreAPI": true
		},
		"1c38e1f5b410124": {
			"_id": "1c38e1f5b410124",
			"component": "RuntimeDatabase",
			"state": "subsystem",
			"action": "function subsystem(params) {\n    return $db.subsystem(params);\n}",
			"core": true,
			"useCoreAPI": true
		},
		"1991116b9e19c00": {
			"_id": "1991116b9e19c00",
			"component": "RuntimeDatabase",
			"state": "system",
			"action": "function system(system) {\n    return $db.system(system);\n}",
			"core": true,
			"useCoreAPI": true
		},
		"1259b1b5851677e": {
			"_id": "1259b1b5851677e",
			"component": "RuntimeMetamodel",
			"state": "create",
			"action": "function create() {\n    $metamodel.create();\n}",
			"core": true,
			"useCoreAPI": true
		},
		"11e141811112394": {
			"_id": "11e141811112394",
			"component": "RuntimeMetamodel",
			"state": "model",
			"action": "function model(model) {\n    $metamodel.model(model);\n}",
			"core": true,
			"useCoreAPI": true
		},
		"1e51a196f511a4d": {
			"_id": "1e51a196f511a4d",
			"component": "RuntimeMetamodel",
			"state": "schema",
			"action": "function schema(schema) {\n    $metamodel.schema(schema);\n}",
			"core": true,
			"useCoreAPI": true
		},
		"1849e137201943c": {
			"_id": "1849e137201943c",
			"component": "RuntimeMetamodel",
			"state": "type",
			"action": "function type(type) {\n    $metamodel.type(type);\n}",
			"core": true,
			"useCoreAPI": true
		},
		"128f21ecc415f7b": {
			"_id": "128f21ecc415f7b",
			"component": "RuntimeSystem",
			"state": "sync",
			"action": "function sync() {\n    var system = JSON.parse($db.system());\n    \n    this.schemas(system.schemas);\n    this.types(system.types);\n    this.behaviors(system.behaviors);\n    this.components(system.components);\n}",
			"core": true,
			"useCoreAPI": true
		}
	},
	"components": {
		"RuntimeAdmin": {
			"admin": {
				"_id": "admin",
				"_core": true
			}
		},
		"Runtime": {
			"runtime": {
				"_id": "runtime",
				"version": "1.1.4"
			}
		},
		"RuntimeDatabase": {
			"db": {
				"_id": "db"
			}
		},
		"RuntimeMetamodel": {
			"metamodel": {
				"_id": "metamodel"
			}
		},
		"RuntimeSystem": {
			"18ed81de331252c": {
				"_id": "18ed81de331252c",
				"name": "system-admin",
				"version": "0.2.0",
				"description": "Runtime Component administration ",
				"subsystem": true,
				"master": false
			},
			"133421d0c313d2d": {
				"_id": "133421d0c313d2d",
				"name": "web",
				"version": "0.1.0",
				"description": "Add behaviors for web",
				"subsystem": true,
				"master": false
			},
			"1f6ff194df1c37a": {
				"_id": "1f6ff194df1c37a",
				"name": "webType",
				"version": "0.1.0",
				"description": "Add types for web",
				"subsystem": true,
				"master": false
			}
		}
	},
	"name": "runtime",
	"version": "1.1.4",
	"description": "Runtime",
	"_id": "e89c617b6b15d24",
	"master": false,
	"subsystem": false
}