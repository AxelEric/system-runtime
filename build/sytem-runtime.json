{
	"models": {
		"138a81fa1f16435": {
			"_id": "138a81fa1f16435",
			"_name": "RuntimeAdmin",
			"_inherit": [
				"RuntimeComponent"
			],
			"_core": true,
			"start": {},
			"designerWindow": {
				"type": "object",
				"readOnly": false,
				"mandatory": false,
				"default": null
			}
		},
		"135c71078810af2": {
			"_id": "135c71078810af2",
			"_name": "RuntimeChannel",
			"_inherit": [
				"RuntimeComponent"
			],
			"_core": true,
			"$editorUpdateSchemaName": {
				"params": [
					{
						"name": "name",
						"type": "string"
					},
					{
						"name": "id",
						"type": "string"
					}
				]
			},
			"$designerSync": {},
			"$appLoadSystem": {
				"params": [
					{
						"name": "system",
						"type": "object"
					}
				]
			},
			"$designerCreateBehavior": {
				"params": [
					{
						"name": "behavior",
						"type": "object"
					}
				]
			},
			"$editorUpdateBehavior": {
				"params": [
					{
						"name": "id",
						"type": "string"
					},
					{
						"name": "behavior",
						"type": "object"
					}
				]
			},
			"$designerUpdateBehavior": {
				"params": [
					{
						"name": "id",
						"type": "string"
					},
					{
						"name": "behavior",
						"type": "object"
					}
				]
			},
			"$editorDeleteBehavior": {
				"params": [
					{
						"name": "id",
						"type": "string"
					}
				]
			},
			"$designerDeleteBehavior": {
				"params": [
					{
						"name": "id",
						"type": "string"
					}
				]
			},
			"$designerCreateComponent": {
				"params": [
					{
						"name": "collection",
						"type": "string"
					},
					{
						"name": "component",
						"type": "object"
					}
				]
			},
			"$editorUpdateComponent": {
				"params": [
					{
						"name": "id",
						"type": "string"
					},
					{
						"name": "collection",
						"type": "string"
					},
					{
						"name": "component",
						"type": "object"
					}
				]
			},
			"$designerUpdateComponent": {
				"params": [
					{
						"name": "id",
						"type": "string"
					},
					{
						"name": "collection",
						"type": "string"
					},
					{
						"name": "component",
						"type": "object"
					}
				]
			},
			"$editorDeleteComponent": {
				"params": [
					{
						"name": "id",
						"type": "string"
					},
					{
						"name": "collection",
						"type": "string"
					}
				]
			},
			"$designerDeleteComponent": {
				"params": [
					{
						"name": "id",
						"type": "string"
					},
					{
						"name": "collection",
						"type": "string"
					}
				]
			},
			"$designerCreateType": {
				"params": [
					{
						"name": "id",
						"type": "string"
					},
					{
						"name": "type",
						"type": "object"
					}
				]
			},
			"$editorUpdateType": {
				"params": [
					{
						"name": "id",
						"type": "string"
					},
					{
						"name": "type",
						"type": "object"
					}
				]
			},
			"$editorDeleteType": {
				"params": [
					{
						"name": "id",
						"type": "string"
					}
				]
			},
			"$designerCreateSchema": {
				"params": [
					{
						"name": "id",
						"type": "string"
					},
					{
						"name": "schema",
						"type": "object"
					}
				]
			},
			"$editorUpdateSchema": {
				"params": [
					{
						"name": "id",
						"type": "string"
					},
					{
						"name": "schema",
						"type": "object"
					}
				]
			},
			"$editorUpdateSchemaId": {
				"params": [
					{
						"name": "oldId",
						"type": "string"
					},
					{
						"name": "newId",
						"type": "string"
					}
				]
			},
			"$designerDeleteSchema": {
				"params": [
					{
						"name": "id",
						"type": "string"
					}
				]
			},
			"$designerCreateModel": {
				"params": [
					{
						"name": "id",
						"type": "string"
					},
					{
						"name": "model",
						"type": "object"
					}
				]
			},
			"$editorUpdateModel": {
				"params": [
					{
						"name": "id",
						"type": "string"
					},
					{
						"name": "model",
						"type": "object"
					}
				]
			},
			"$designerUpdateModel": {
				"params": [
					{
						"name": "id",
						"type": "string"
					},
					{
						"name": "model",
						"type": "object"
					}
				]
			},
			"$editorUpdateModelId": {
				"params": [
					{
						"name": "oldId",
						"type": "string"
					},
					{
						"name": "newId",
						"type": "string"
					}
				]
			},
			"$designerDeleteModel": {
				"params": [
					{
						"name": "id",
						"type": "string"
					}
				]
			},
			"$editorUpdateSystem": {
				"params": [
					{
						"name": "id",
						"type": "string"
					},
					{
						"name": "system",
						"type": "object"
					}
				]
			},
			"$appLogDebug": {
				"params": [
					{
						"name": "message",
						"type": "string"
					}
				]
			},
			"$appLogInfo": {
				"params": [
					{
						"name": "message",
						"type": "string"
					}
				]
			},
			"$appLogWarn": {
				"params": [
					{
						"name": "message",
						"type": "string"
					}
				]
			},
			"$appLogError": {
				"params": [
					{
						"name": "message",
						"type": "string"
					}
				]
			},
			"send": {
				"params": [
					{
						"name": "message",
						"type": "message"
					}
				]
			},
			"$systemInstalled": {
				"params": [
					{
						"name": "id",
						"type": "string",
						"mandatory": true,
						"default": ""
					}
				]
			},
			"$systemResolved": {
				"params": [
					{
						"name": "id",
						"type": "string",
						"mandatory": true,
						"default": ""
					}
				]
			},
			"$systemUninstalled": {
				"params": [
					{
						"name": "id",
						"type": "string",
						"mandatory": true,
						"default": ""
					}
				]
			},
			"$systemStarted": {
				"params": [
					{
						"name": "id",
						"type": "string",
						"mandatory": true,
						"default": ""
					}
				]
			},
			"$systemStopped": {
				"params": [
					{
						"name": "id",
						"type": "string",
						"mandatory": true,
						"default": ""
					}
				]
			}
		},
		"1f4141671514c2c": {
			"_id": "1f4141671514c2c",
			"_name": "RuntimeStorage",
			"get": {
				"params": [
					{
						"name": "key",
						"type": "string",
						"mandatory": true,
						"default": ""
					}
				]
			},
			"set": {
				"params": [
					{
						"name": "key",
						"type": "string",
						"mandatory": true,
						"default": ""
					},
					{
						"name": "value",
						"type": "any",
						"mandatory": true,
						"default": null
					}
				]
			},
			"changed": {
				"params": [
					{
						"name": "changed",
						"type": "object",
						"mandatory": true,
						"default": {}
					}
				]
			},
			"clear": {},
			"remove": {
				"params": [
					{
						"name": "key",
						"type": "string",
						"mandatory": true,
						"default": ""
					}
				]
			},
			"_core": true,
			"store": {
				"type": "object",
				"readOnly": false,
				"mandatory": false,
				"default": {}
			}
		},
		"14c7c105b31a160": {
			"_id": "14c7c105b31a160",
			"_name": "Runtime",
			"_core": true,
			"version": {
				"type": "string",
				"readOnly": true,
				"mandatory": true,
				"default": "0.0.0"
			},
			"system": {
				"params": [
					{
						"name": "name",
						"type": "string",
						"mandatory": false
					}
				],
				"result": "object"
			},
			"message": {
				"params": [
					{
						"name": "msg",
						"type": "message",
						"mandatory": true
					}
				]
			},
			"ready": {}
		},
		"166971fd9d107fd": {
			"_name": "RuntimeBehavior",
			"_core": true,
			"core": {
				"type": "boolean",
				"readOnly": false,
				"mandatory": false,
				"default": false
			},
			"useCoreAPI": {
				"type": "boolean",
				"readOnly": false,
				"mandatory": false,
				"default": false
			},
			"component": {
				"type": "string",
				"readOnly": false,
				"mandatory": true,
				"default": ""
			},
			"action": {
				"type": "javascript",
				"readOnly": false,
				"mandatory": true,
				"default": ""
			},
			"state": {
				"type": "string",
				"readOnly": false,
				"mandatory": true,
				"default": ""
			},
			"_id": "166971fd9d107fd"
		},
		"158321dced1014a": {
			"_name": "RuntimeClassInfo",
			"_core": true,
			"model": {
				"type": "object",
				"readOnly": true,
				"mandatory": true,
				"default": {}
			},
			"property": {
				"params": [
					{
						"name": "name",
						"type": "string"
					}
				],
				"result": "object"
			},
			"properties": {
				"result": "array"
			},
			"link": {
				"params": [
					{
						"name": "name",
						"type": "string"
					}
				],
				"result": "object"
			},
			"links": {
				"result": "array"
			},
			"method": {
				"params": [
					{
						"name": "name",
						"type": "string"
					}
				],
				"result": "object"
			},
			"methods": {
				"result": "array"
			},
			"collection": {
				"params": [
					{
						"name": "name",
						"type": "string"
					}
				],
				"result": "object"
			},
			"collections": {
				"result": "array"
			},
			"event": {
				"params": [
					{
						"name": "name",
						"type": "string"
					}
				],
				"result": "object"
			},
			"events": {
				"result": "array"
			},
			"_id": "158321dced1014a",
			"schema": {
				"type": "object",
				"readOnly": true,
				"mandatory": true,
				"default": {}
			}
		},
		"123751cb591de26": {
			"_id": "123751cb591de26",
			"_name": "RuntimeComponent",
			"_core": true,
			"on": {
				"params": [
					{
						"name": "state",
						"type": "string"
					},
					{
						"name": "handler",
						"type": "function"
					},
					{
						"name": "useCoreAPI",
						"type": "boolean",
						"mandatory": false,
						"default": false
					},
					{
						"name": "isCore",
						"type": "boolean",
						"mandatory": false,
						"default": false
					}
				]
			},
			"off": {
				"params": [
					{
						"name": "state",
						"type": "string",
						"mandatory": false
					},
					{
						"name": "behaviorId",
						"type": "string",
						"mandatory": false
					}
				]
			},
			"require": {
				"params": [
					{
						"name": "id",
						"type": "string"
					}
				]
			},
			"destroy": {
				"params": []
			},
			"classInfo": {
				"type": "@RuntimeClassInfo",
				"readOnly": false,
				"mandatory": false,
				"default": {}
			},
			"init": {
				"params": [
					{
						"name": "conf",
						"type": "object"
					}
				]
			},
			"error": {
				"params": [
					{
						"name": "data",
						"type": "errorParam"
					}
				]
			}
		},
		"18a51169d7112d4": {
			"_name": "RuntimeDatabase",
			"_core": true,
			"system": {
				"params": [
					{
						"name": "system",
						"type": "object",
						"mandatory": false
					}
				],
				"result": "string"
			},
			"subsystem": {
				"params": [
					{
						"name": "params",
						"type": "object"
					}
				],
				"result": "string"
			},
			"collections": {
				"result": "object"
			},
			"insert": {
				"params": [
					{
						"name": "classId",
						"type": "string"
					},
					{
						"name": "object",
						"type": "object"
					}
				]
			},
			"update": {
				"params": [
					{
						"name": "schema",
						"type": "string"
					},
					{
						"name": "componentId",
						"type": "string"
					},
					{
						"name": "attributeName",
						"type": "string"
					},
					{
						"name": "attributeValue",
						"type": "object"
					}
				]
			},
			"remove": {
				"params": [
					{
						"name": "classId",
						"type": "string"
					},
					{
						"name": "object",
						"type": "string"
					}
				]
			},
			"_id": "18a51169d7112d4"
		},
		"16b9d1ac2216ffe": {
			"_name": "RuntimeLogger",
			"_core": true,
			"level": {
				"type": "log",
				"readOnly": false,
				"mandatory": false,
				"default": "warn"
			},
			"debug": {
				"params": [
					{
						"name": "message",
						"type": "string"
					}
				]
			},
			"info": {
				"params": [
					{
						"name": "message",
						"type": "string"
					}
				]
			},
			"warn": {
				"params": [
					{
						"name": "message",
						"type": "string"
					}
				]
			},
			"error": {
				"params": [
					{
						"name": "message",
						"type": "string"
					}
				]
			},
			"_id": "16b9d1ac2216ffe"
		},
		"1d9b6139411aa91": {
			"_name": "RuntimeMessage",
			"_core": true,
			"event": {
				"type": "string",
				"readOnly": false,
				"mandatory": true,
				"default": ""
			},
			"from": {
				"type": "string",
				"readOnly": false,
				"mandatory": true,
				"default": ""
			},
			"data": {
				"type": "array",
				"readOnly": false,
				"mandatory": true,
				"default": []
			},
			"_id": "1d9b6139411aa91"
		},
		"1628c13c22152e6": {
			"_name": "RuntimeMetamodel",
			"_core": true,
			"schema": {
				"params": [
					{
						"name": "schema",
						"type": "object"
					}
				],
				"result": "any"
			},
			"model": {
				"params": [
					{
						"name": "model",
						"type": "object"
					}
				],
				"result": "any"
			},
			"type": {
				"params": [
					{
						"name": "type",
						"type": "object"
					}
				],
				"result": "any"
			},
			"create": {
				"params": []
			},
			"_id": "1628c13c22152e6"
		},
		"177ac136891629f": {
			"_name": "RuntimeState",
			"_core": true,
			"name": {
				"type": "string",
				"readOnly": false,
				"mandatory": true,
				"default": ""
			},
			"parameters": {
				"type": "object",
				"readOnly": false,
				"mandatory": false,
				"default": {}
			},
			"_id": "177ac136891629f"
		},
		"170521b88614387": {
			"_name": "RuntimeSystem",
			"_core": true,
			"name": {
				"type": "string",
				"readOnly": false,
				"mandatory": true,
				"default": ""
			},
			"master": {
				"type": "boolean",
				"readOnly": false,
				"mandatory": false,
				"default": false
			},
			"subsystem": {
				"type": "boolean",
				"readOnly": false,
				"mandatory": false,
				"default": false
			},
			"version": {
				"type": "string",
				"readOnly": false,
				"mandatory": false,
				"default": "0.0.1"
			},
			"description": {
				"type": "string",
				"readOnly": false,
				"mandatory": false,
				"default": ""
			},
			"schemas": {
				"type": "object",
				"readOnly": false,
				"mandatory": false,
				"default": {}
			},
			"models": {
				"type": "object",
				"readOnly": false,
				"mandatory": false,
				"default": {}
			},
			"behaviors": {
				"type": "object",
				"readOnly": false,
				"mandatory": false,
				"default": {}
			},
			"types": {
				"type": "object",
				"readOnly": false,
				"mandatory": false,
				"default": {}
			},
			"components": {
				"type": "object",
				"readOnly": false,
				"mandatory": false,
				"default": {}
			},
			"ready": {},
			"sync": {},
			"main": {},
			"_id": "170521b88614387"
		},
		"100b91ed2211b15": {
			"_id": "100b91ed2211b15",
			"_name": "RuntimeOSGi",
			"install": {
				"params": [
					{
						"name": "url",
						"type": "any",
						"mandatory": true,
						"default": ""
					},
					{
						"name": "async",
						"type": "boolean",
						"mandatory": false,
						"default": true
					}
				],
				"result": "string"
			},
			"uninstall": {
				"params": [
					{
						"name": "id",
						"type": "string",
						"mandatory": true,
						"default": ""
					}
				]
			},
			"start": {
				"params": [
					{
						"name": "id",
						"type": "string",
						"mandatory": true,
						"default": ""
					}
				]
			},
			"stop": {
				"params": [
					{
						"name": "id",
						"type": "string",
						"mandatory": true,
						"default": ""
					}
				]
			},
			"status": {
				"result": "object"
			},
			"_core": true,
			"bundle": {
				"result": "string"
			}
		},
		"1b2811b092143f5": {
			"_id": "1b2811b092143f5",
			"_name": "RuntimeSystemOSGi",
			"start": {},
			"stop": {},
			"_core": true,
			"state": {
				"type": "string",
				"readOnly": false,
				"mandatory": false,
				"default": "none"
			},
			"location": {
				"type": "string",
				"readOnly": false,
				"mandatory": false,
				"default": ""
			},
			"uninstall": {},
			"bundle": {
				"result": "string"
			}
		}
	},
	"schemas": {
		"10374180581a41f": {
			"_id": "10374180581a41f",
			"_name": "RuntimeAdmin",
			"_inherit": [
				"RuntimeComponent"
			],
			"_core": true,
			"designerWindow": "property",
			"start": "method"
		},
		"104ad1f48518376": {
			"_id": "104ad1f48518376",
			"_name": "RuntimeChannel",
			"_core": true,
			"$editorUpdateSystem": "event",
			"$editorUpdateSchema": "event",
			"$editorUpdateSchemaId": "event",
			"$editorUpdateSchemaName": "event",
			"$editorUpdateModel": "event",
			"$editorUpdateModelId": "event",
			"$editorUpdateType": "event",
			"$editorDeleteType": "event",
			"$editorUpdateBehavior": "event",
			"$editorDeleteBehavior": "event",
			"$editorUpdateComponent": "event",
			"$editorDeleteComponent": "event",
			"$appLogDebug": "event",
			"$appLogInfo": "event",
			"$appLogWarn": "event",
			"$appLogError": "event",
			"$appLoadSystem": "event",
			"$designerSync": "event",
			"$designerCreateBehavior": "event",
			"$designerCreateComponent": "event",
			"$designerCreateType": "event",
			"$designerCreateSchema": "event",
			"$designerCreateModel": "event",
			"$designerDeleteSchema": "event",
			"$designerDeleteModel": "event",
			"$designerDeleteType": "event",
			"$designerDeleteBehavior": "event",
			"$designerDeleteComponent": "event",
			"$designerUpdateComponent": "event",
			"$designerUpdateModel": "event",
			"$designerUpdateBehavior": "event",
			"_inherit": [
				"RuntimeComponent"
			],
			"send": "event",
			"$systemInstalled": "event",
			"$systemResolved": "event",
			"$systemStarted": "event",
			"$systemStopped": "event",
			"$systemUninstalled": "event"
		},
		"12fa8181ce127a0": {
			"_id": "12fa8181ce127a0",
			"_name": "RuntimeStorage",
			"_inherit": [
				"RuntimeComponent"
			],
			"_core": true,
			"store": "property",
			"get": "method",
			"set": "method",
			"remove": "method",
			"clear": "method",
			"changed": "event"
		},
		"12e211d4cd120a6": {
			"_id": "12e211d4cd120a6",
			"_name": "Runtime",
			"_inherit": [
				"RuntimeOSGi"
			],
			"_core": true,
			"version": "property",
			"system": "method",
			"message": "method",
			"ready": "event"
		},
		"1ac07185641fa9f": {
			"_name": "RuntimeBehavior",
			"_inherit": [
				"RuntimeComponent"
			],
			"_core": true,
			"core": "property",
			"component": "property",
			"action": "property",
			"state": "property",
			"useCoreAPI": "property",
			"_id": "1ac07185641fa9f"
		},
		"1c00b13a1b1bc92": {
			"_name": "RuntimeClassInfo",
			"_inherit": [
				"RuntimeComponent"
			],
			"_core": true,
			"model": "property",
			"schema": "property",
			"method": "method",
			"methods": "method",
			"property": "method",
			"properties": "method",
			"link": "method",
			"links": "method",
			"collections": "method",
			"collection": "method",
			"event": "method",
			"events": "method",
			"_id": "1c00b13a1b1bc92"
		},
		"111df11e2b19fde": {
			"_id": "111df11e2b19fde",
			"_name": "RuntimeComponent",
			"_inherit": [],
			"_core": true,
			"classInfo": "property",
			"on": "method",
			"off": "method",
			"require": "method",
			"destroy": "method",
			"init": "method",
			"error": "event"
		},
		"1723516a30132ac": {
			"_name": "RuntimeDatabase",
			"_inherit": [
				"RuntimeComponent"
			],
			"_core": true,
			"system": "method",
			"subsystem": "method",
			"collections": "method",
			"insert": "event",
			"update": "event",
			"remove": "event",
			"_id": "1723516a30132ac"
		},
		"1268f1dddd1fea7": {
			"_name": "RuntimeLogger",
			"_core": true,
			"level": "property",
			"debug": "method",
			"info": "method",
			"warn": "method",
			"error": "method",
			"_id": "1268f1dddd1fea7"
		},
		"14caa1c46414ee1": {
			"_name": "RuntimeMessage",
			"_inherit": [
				"RuntimeComponent"
			],
			"_core": true,
			"event": "property",
			"from": "property",
			"data": "property",
			"_id": "14caa1c46414ee1"
		},
		"193f1166eb16609": {
			"_name": "RuntimeMetamodel",
			"_inherit": [
				"RuntimeComponent"
			],
			"_core": true,
			"schema": "method",
			"model": "method",
			"type": "method",
			"create": "method",
			"_id": "193f1166eb16609"
		},
		"158711d6f215e4b": {
			"_name": "RuntimeState",
			"_inherit": [],
			"_core": true,
			"_class": false,
			"name": "property",
			"parameters": "property",
			"_id": "158711d6f215e4b"
		},
		"1cb761fa4510dca": {
			"_id": "1cb761fa4510dca",
			"_name": "RuntimeSystem",
			"_inherit": [
				"RuntimeSystemOSGi"
			],
			"_core": true,
			"name": "property",
			"master": "property",
			"subsystem": "property",
			"version": "property",
			"description": "property",
			"schemas": "property",
			"models": "property",
			"behaviors": "property",
			"types": "property",
			"components": "property",
			"sync": "method",
			"main": "method",
			"ready": "event"
		},
		"157931f7a31b61d": {
			"_id": "157931f7a31b61d",
			"_name": "RuntimeOSGi",
			"_inherit": [
				"RuntimeComponent"
			],
			"_core": true,
			"install": "method",
			"uninstall": "method",
			"start": "method",
			"stop": "method",
			"status": "method",
			"bundle": "method"
		},
		"145fe10c7514298": {
			"_id": "145fe10c7514298",
			"_name": "RuntimeSystemOSGi",
			"_inherit": [
				"RuntimeComponent"
			],
			"_core": true,
			"state": "property",
			"location": "property",
			"start": "method",
			"stop": "method",
			"uninstall": "method",
			"bundle": "method"
		}
	},
	"types": {
		"collection": {
			"name": "collection",
			"type": "object",
			"schema": {
				"type": {
					"type": [
						"string"
					],
					"mandatory": true
				},
				"readOnly": {
					"type": "boolean",
					"mandatory": true
				},
				"mandatory": {
					"type": "boolean",
					"mandatory": true
				},
				"default": {
					"type": "object",
					"mandatory": true
				},
				"description": {
					"type": "string",
					"mandatory": false
				},
				"label": {
					"type": "string",
					"mandatory": false
				}
			},
			"core": true
		},
		"css": {
			"name": "css",
			"type": "string",
			"core": true
		},
		"date": {
			"name": "date",
			"type": "object",
			"core": true
		},
		"errorParam": {
			"name": "errorParam",
			"type": "object",
			"schema": {
				"message": {
					"type": "string",
					"mandatory": true
				},
				"error": {
					"type": "object",
					"mandatory": true
				}
			},
			"core": true
		},
		"event": {
			"name": "event",
			"type": "object",
			"schema": {
				"params": {
					"type": [
						"parameter"
					],
					"mandatory": false
				},
				"description": {
					"type": "string",
					"mandatory": false
				}
			},
			"core": true
		},
		"html": {
			"name": "html",
			"type": "string",
			"core": true
		},
		"javascript": {
			"name": "javascript",
			"type": "string",
			"core": true
		},
		"json": {
			"name": "json",
			"type": "object",
			"core": true
		},
		"link": {
			"name": "link",
			"type": "object",
			"schema": {
				"type": {
					"type": "string",
					"mandatory": true
				},
				"readOnly": {
					"type": "boolean",
					"mandatory": true
				},
				"mandatory": {
					"type": "boolean",
					"mandatory": true
				},
				"default": {
					"type": "@type",
					"mandatory": true
				},
				"description": {
					"type": "string",
					"mandatory": false
				},
				"label": {
					"type": "string",
					"mandatory": false
				}
			},
			"core": true
		},
		"log": {
			"name": "log",
			"type": "string",
			"value": [
				"debug",
				"info",
				"warn",
				"error"
			],
			"core": true
		},
		"message": {
			"name": "message",
			"type": "object",
			"schema": {
				"event": {
					"type": "string",
					"mandatory": true
				},
				"from": {
					"type": "string",
					"mandatory": false
				},
				"data": {
					"type": "object",
					"mandatory": true
				}
			},
			"core": true
		},
		"method": {
			"name": "method",
			"type": "object",
			"schema": {
				"result": {
					"type": "string",
					"mandatory": false
				},
				"params": {
					"type": [
						"parameter"
					],
					"mandatory": false
				},
				"description": {
					"type": "string",
					"mandatory": false
				}
			},
			"core": true
		},
		"parameter": {
			"name": "parameter",
			"type": "object",
			"schema": {
				"name": {
					"type": "string",
					"mandatory": true
				},
				"type": {
					"type": "string",
					"mandatory": true
				},
				"mandatory": {
					"type": "boolean",
					"mandatory": false
				},
				"default": {
					"type": "@type",
					"mandatory": false
				}
			},
			"core": true
		},
		"property": {
			"name": "property",
			"type": "object",
			"schema": {
				"type": {
					"type": "string",
					"mandatory": true
				},
				"readOnly": {
					"type": "boolean",
					"mandatory": true
				},
				"mandatory": {
					"type": "boolean",
					"mandatory": true
				},
				"default": {
					"type": "@type",
					"mandatory": true
				},
				"description": {
					"type": "string",
					"mandatory": false
				},
				"label": {
					"type": "string",
					"mandatory": false
				}
			},
			"core": true
		},
		"osgiStates": {
			"name": "osgiStates",
			"type": "string",
			"value": [
				"none",
				"installed",
				"resolved",
				"starting",
				"active",
				"stopping",
				"uninstalled"
			],
			"core": true
		}
	},
	"behaviors": {
		"1c00c107e01c9b3": {
			"_id": "1c00c107e01c9b3",
			"component": "RuntimeAdmin",
			"state": "start",
			"action": "function start() {\n    var RuntimeChannel = null,\n        channel = null;\n\n    if (!this.require('channel-admin')) {\n        RuntimeChannel = this.require('RuntimeChannel');\n        channel = new RuntimeChannel({\n            '_id': 'channel-admin',\n            '_core': true\n        });\n        \n        // for jquery compatibility in electron\n        if (typeof global !== 'undefined' && typeof window !== 'undefined') {\n            delete module;\n        }\n\n        channel.on('send', function send(message) {\n            this.require('admin').designerWindow().postMessage(JSON.stringify(message), '*');\n        }, false, true);\n\n        // schema change events\n        channel.on('$designerCreateSchema', function $designerCreateSchema(id, schema) {\n            this.require('logger').level('warn');\n            this.require('metamodel').schema(schema);\n            this.require('metamodel').create();\n            this.require('logger').level('debug');\n        }, true, true);\n\n        channel.on('$editorUpdateSchema', function $editorUpdateSchema(id, schema) {\n            this.require('logger').level('warn');\n            this.require('metamodel').schema(schema);\n            this.require('metamodel').create();\n            this.require('logger').level('debug');\n        }, true, true);\n\n        channel.on('$designerDeleteSchema', function $designerDeleteSchema(id) {\n            this.require('logger').level('warn');\n            var search = $db.RuntimeSchema.find({ '_id': id }),\n                modelName = '',\n                modelId = '';\n\n            if (search.length) {\n                modelName = search[0]._name;\n                $db.RuntimeSchema.remove({ '_id': id });\n\n                search = $db.RuntimeModel.find({ '_name': modelName });\n                if (search.length) {\n                    modelId = search[0]._id;\n                    $db.RuntimeModel.remove({ '_id': modelId });\n                    $component.removeFromMemory(modelName);\n                }\n\n                search = $db.RuntimeGeneratedModel.find({ '_name': modelName });\n                if (search.length) {\n                    modelId = search[0]._id;\n                    $db.RuntimeGeneratedModel.remove({ '_id': modelId });\n                    $component.removeFromMemory(modelName);\n                }\n                this.require('metamodel').create();\n            }\n            this.require('logger').level('debug');\n        }, true, true);\n\n        // model change events\n        channel.on('$designerCreateModel', function $designerCreateModel(id, model) {\n            this.require('logger').level('warn');\n            this.require('metamodel').model(model);\n            this.require('metamodel').create();\n            this.require('logger').level('debug');\n        }, true, true);\n\n        channel.on('$editorUpdateModel', function $editorUpdateModel(id, model) {\n            this.require('logger').level('warn');\n            this.require('metamodel').model(model);\n            this.require('metamodel').create();\n            this.require('logger').level('debug');\n        }, true, true);\n\n        channel.on('$designerUpdateModel', function $designerUpdateModel(id, model) {\n            this.require('logger').level('warn');\n            this.require('metamodel').model(model);\n            this.require('metamodel').create();\n            this.require('logger').level('debug');\n        }, true, true);\n\n        channel.on('$designerDeleteModel', function $designerDeleteModel(id) {\n            this.require('logger').level('warn');\n            var search = $db.RuntimeModel.find({ '_id': id }),\n                modelName = '',\n                modelId = '';\n\n            if (search.length) {\n                modelName = search[0]._name;\n                $db.RuntimeModel.remove({ '_id': id });\n                $component.removeFromMemory(modelName);\n            }\n\n            search = $db.RuntimeGeneratedModel.find({ '_name': modelName });\n            if (search.length) {\n                modelId = search[0]._id;\n                $db.RuntimeGeneratedModel.remove({ '_id': modelId });\n                $component.removeFromMemory(modelName);\n            }\n            this.require('metamodel').create();\n            this.require('logger').level('debug');\n        }, true, true);\n\n        // type change events\n        channel.on('$designerCreateType', function $designerCreateType(id, type) {\n            this.require('logger').level('warn');\n            this.require('metamodel').type(type);\n            this.require('metamodel').create();\n            this.require('logger').level('debug');\n        }, true, true);\n\n        channel.on('$editorUpdateType', function $editorUpdateType(id, type) {\n            this.require('logger').level('warn');\n            this.require('metamodel').type(type);\n            this.require('metamodel').create();\n            this.require('logger').level('debug');\n\n        }, true, true);\n\n        channel.on('$editorDeleteType', function $editorDeleteType(id) {\n            this.require('logger').level('warn');\n            $db.RuntimeType.remove({ 'name': id });\n            this.require('metamodel').create();\n            this.require('logger').level('debug');\n        }, true, true);\n\n        channel.on('$designerDeleteType', function $designerDeleteType(id) {\n            this.require('logger').level('warn');\n            $db.RuntimeType.remove({ 'name': id });\n            this.require('metamodel').create();\n            this.require('logger').level('debug');\n        }, true, true);\n\n        // component change events\n        channel.on('$designerCreateComponent', function $designerCreateComponent(model, component) {\n            $db[model].insert(component);\n        }, true, true);\n\n        channel.on('$editorUpdateComponent', function $editorUpdateComponent(id, collection, component) {\n            $db[collection].update({ '_id': id }, component, { 'upsert': true });\n        }, true, true);\n\n        channel.on('$designerUpdateComponent', function $editorUpdateComponent(id, collection, component) {\n            $db[collection].update({ '_id': id }, component, { 'upsert': true });\n        }, true, true);\n\n        channel.on('$editorDeleteComponent', function $editorDeleteComponent(id, collection) {\n            $db[collection].remove({ '_id': id });\n        }, true, true);\n\n        channel.on('$designerDeleteComponent', function $designerDeleteComponent(id, collection) {\n            $db[collection].remove({ '_id': id });\n        }, true, true);\n\n        // behavior change events\n        channel.on('$designerCreateBehavior', function createBehavior(component) {\n            $db.RuntimeBehavior.insert(component);\n        }, true, true);\n\n        channel.on('$editorUpdateBehavior', function $editorUpdateBehavior(id, behavior) {\n            if (this.require(id)) {\n                this.require(id).action(behavior.action);\n                if (behavior.state === 'main') {\n                    this.require(behavior.component).main();\n                }\n                if (behavior.state === 'start') {\n                    this.require(behavior.component).start();\n                }\n            }\n        }, true, true);\n\n        channel.on('$designerUpdateBehavior', function $designerUpdateBehavior(id, behavior) {\n            if (this.require(id)) {\n                this.require(id).action(behavior.action);\n                if (behavior.state === 'main') {\n                    this.require(behavior.component).main();\n                }\n                if (behavior.state === 'start') {\n                    this.require(behavior.component).start();\n                }\n            }\n        }, true, true);\n\n        channel.on('$editorDeleteBehavior', function $editorDeleteBehavior(id) {\n            $db.RuntimeBehavior.remove({ '_id': id });\n        }, true, true);\n\n        channel.on('$designerDeleteBehavior', function $editorDeleteBehavior(id) {\n            $db.RuntimeBehavior.remove({ '_id': id });\n        }, true, true);\n\n        // System Designer event\n        channel.on('$designerSync', function sync() {\n            var designerWindow = this.require('admin').designerWindow(),\n                system = null;\n\n            this.require('admin').designerWindow(null);\n            system = JSON.parse(this.require('db').system());\n            designerWindow = this.require('admin').designerWindow(designerWindow);\n\n            this.$appLoadSystem(system);\n        }, false, true);\n\n        window.addEventListener('message', function (event) {\n            var data = null;\n            try {\n                data = JSON.parse(event.data);\n                if (data &&\n                    typeof data.event !== 'undefined' &&\n                    typeof data.from !== 'undefined' &&\n                    typeof data.data !== 'undefined') {\n                    this.designerWindow(event.source);\n                    $db.RuntimeMessage.insert(data);\n                }\n            } catch (e) {\n            }\n        }.bind(this), false);\n\n        this.require('logger').info('admin is started');\n    } else {\n        this.require('logger').info('admin is already started');\n    }\n}",
			"useCoreAPI": true,
			"core": true
		},
		"1ca0f1020412d4f": {
			"_id": "1ca0f1020412d4f",
			"component": "RuntimeStorage",
			"state": "get",
			"action": "function get(key) {\n    var result = null;\n    \n    if (typeof this.store()[key]) {\n        result = this.store()[key];\n    }\n    return result;\n}",
			"useCoreAPI": false,
			"core": true
		},
		"16764100d51b5f8": {
			"_id": "16764100d51b5f8",
			"component": "RuntimeStorage",
			"state": "set",
			"action": "function set(key, value) {\n    var store = this.store(),\n        item = {};\n    \n    store[key] = value;\n    this.store(store);\n    \n    item[key] = JSON.stringify(value);\n    \n    switch (true) {\n        case typeof localStorage !== 'undefined':\n            localStorage.setItem(key, JSON.stringify(value)); \n            break;\n        default:\n            break;\n    }\n}",
			"useCoreAPI": false,
			"core": true
		},
		"134b616b1016f60": {
			"_id": "134b616b1016f60",
			"component": "RuntimeStorage",
			"state": "clear",
			"action": "function clear() {\n    this.store({});\n    \n    switch (true) {\n        case typeof localStorage !== 'undefined':\n            localStorage.clear(); \n            break;\n        default:\n            break;\n    }\n}",
			"useCoreAPI": false,
			"core": true
		},
		"14c7f1a8431b3d5": {
			"_id": "14c7f1a8431b3d5",
			"component": "RuntimeStorage",
			"state": "init",
			"action": "function init(conf) {\n    switch (true) {\n        case typeof localStorage !== 'undefined':\n            \n            // init \n            var keys = Object.keys(localStorage),\n                store = {},\n                i = 0,\n                length = 0;\n                \n            length = keys.length;    \n            for (i = 0; i < length; i++) {\n                try {\n                    store[keys[i]] = JSON.parse(localStorage[keys[i]]);\n                } catch (e) {\n                }\n            }\n            this.store(store);\n            \n            // event\n            window.addEventListener('storage', function (e) {\n                var obj = {},\n                    store = this.store();\n                    \n                try {\n                    store[e.key] = JSON.parse(e.newValue)\n                    this.store(store);\n                   \n                    obj[e.key] = {};\n                    obj[e.key].oldValue = JSON.parse(e.oldValue);\n                    obj[e.key].newValue = JSON.parse(e.newValue);\n                    \n                    this.changed(obj);\n                } catch (e) {\n                }\n            }.bind(this));\n            break;\n        default:\n            break;\n    }\n}",
			"useCoreAPI": false,
			"core": true
		},
		"1a4921ac7112bd4": {
			"_id": "1a4921ac7112bd4",
			"component": "RuntimeStorage",
			"state": "remove",
			"action": "function remove(key) {\n    var store = this.store();\n    \n    delete store[key];\n    this.store(store);\n    \n    switch (true) {\n        case typeof localStorage !== 'undefined':\n            localStorage.removeItem(key); \n            break;\n        default:\n            break;\n    }\n}",
			"useCoreAPI": false,
			"core": true
		},
		"13010167f313f87": {
			"_id": "13010167f313f87",
			"component": "Runtime",
			"state": "system",
			"action": "function system(name) {\n    var RuntimeSystem = null,\n    system = {},\n    systemId = '',\n    result = [],\n    conf = {};\n    \n    if (name) {\n        conf.master = true;\n        conf.name = name;\n        RuntimeSystem = this.require('RuntimeSystem');\n        system = new RuntimeSystem(conf);\n    } else {\n        result = $db.RuntimeSystem.find({\n            'master': true\n        });\n        if (result.length) {\n            systemId = result[0]._id;\n            system = $component.get(systemId);\n        }\n    }\n    return system;\n}",
			"core": true,
			"useCoreAPI": true
		},
		"155141e40312cd8": {
			"_id": "155141e40312cd8",
			"component": "RuntimeClassInfo",
			"state": "collection",
			"action": "function collection(name) {\n    var result = {};\n    if (this.schema()[name] === 'collection') {\n        result = this.model()[name];\n    } \n    \n    return result; \n}",
			"core": true
		},
		"1f6941a0c012c1f": {
			"_id": "1f6941a0c012c1f",
			"component": "RuntimeClassInfo",
			"state": "collections",
			"action": "function collections(name) {\n    var keys = Object.keys(this.schema()),\n    item = '',\n    result = [],\n    i = 0,\n    length = 0;\n    \n    length = keys.length; \n    \n    for (i = 0; i < length; i++) { \n        item = keys[i]; \n        if (this.schema()[item] === 'collection') {\n            result.push(item);\n        }\n    }\n    \n    return result;\n}",
			"core": true
		},
		"1ef711b4171c849": {
			"_id": "1ef711b4171c849",
			"component": "RuntimeClassInfo",
			"state": "event",
			"action": "function event(name) {\n    var result = {};\n    \n    if (this.schema()[name] === 'event') {\n        result = this.model()[name];\n    } \n    \n    return result;\n}",
			"core": true
		},
		"1bae51b6ed1d25c": {
			"_id": "1bae51b6ed1d25c",
			"component": "RuntimeClassInfo",
			"state": "events",
			"action": "function events(name) {\n    var keys = Object.keys(this.schema()),\n    item = '',\n    result = [],\n    i = 0,\n    length = 0;\n    \n    length = keys.length;\n    \n    for (i = 0; i < length; i++) {\n        item = keys[i];\n        if (this.schema()[item] === 'event') {\n            result.push(item);\n        }\n    } \n    return result;\n}",
			"core": true
		},
		"19ac2125221528b": {
			"_id": "19ac2125221528b",
			"component": "RuntimeClassInfo",
			"state": "link",
			"action": "function link(name) {\n    var result = {};\n    \n    if (this.schema()[name] === 'link') {\n        result = this.model()[name];\n    }\n    return result;\n}",
			"core": true
		},
		"17ed21dfc01b8e8": {
			"_id": "17ed21dfc01b8e8",
			"component": "RuntimeClassInfo",
			"state": "links",
			"action": "function links(name) { \n    var keys = Object.keys(this.schema()),\n    item = '',\n    result = [],\n    i = 0,\n    length = 0;\n    length = keys.length;\n    \n    for (i = 0; i < length; i++) {\n        item = keys[i];\n        if (this.schema()[item] === 'link') {\n            result.push(item);\n        }\n    } return result;\n}",
			"core": true
		},
		"11ce318a561ac61": {
			"_id": "11ce318a561ac61",
			"component": "RuntimeClassInfo",
			"state": "method",
			"action": "function method(name) {\n    var result = {};\n    if (this.schema()[name] === 'method') {\n        result = this.model()[name];\n        \n    }\n    \n    return result;\n}",
			"core": true
		},
		"12ff2190a018046": {
			"_id": "12ff2190a018046",
			"component": "RuntimeClassInfo",
			"state": "methods",
			"action": "function methods(name) {\n    var keys = Object.keys(this.schema()),\n    item = '',\n    result = [],\n    i = 0,\n    length = 0;\n    length = keys.length;\n    for (i = 0; i < length; i++) {\n        item = keys[i];\n        if (this.schema()[item] === 'method') {\n            result.push(item);\n        }\n    } \n    \n    return result;\n}",
			"core": true
		},
		"1028d1681e1fd58": {
			"_id": "1028d1681e1fd58",
			"component": "RuntimeClassInfo",
			"state": "properties",
			"action": "function properties(name) { \n    var keys = Object.keys(this.schema()),\n    item = '',\n    result = [],\n    i = 0,\n    length = 0;\n    length = keys.length;\n    \n    for (i = 0; i < length; i++) {\n        item = keys[i];\n        if (this.schema()[item] === 'property') {\n            result.push(item);\n        }\n    } return result;\n}",
			"core": true
		},
		"18eeb10c5319368": {
			"_id": "18eeb10c5319368",
			"component": "RuntimeClassInfo",
			"state": "property",
			"action": "function property(name) {\n    var result = {};\n    \n    if (this.schema()[name] === 'property') {\n        result = this.model()[name];\n    }\n    return result;\n}",
			"core": true
		},
		"1ba721201114b6b": {
			"_id": "1ba721201114b6b",
			"component": "RuntimeComponent",
			"state": "destroy",
			"action": "function destroy() {\n    $component.destroy(this.id());\n}",
			"core": true,
			"useCoreAPI": true
		},
		"15486186f41a48c": {
			"_id": "15486186f41a48c",
			"component": "RuntimeComponent",
			"state": "off",
			"action": "function off(state, behaviorId) {\n    var args = [],\n    i = 0,\n    length = 0;\n    length = arguments.length;\n    \n    for (i = 0; i < length - 7; i++) {\n        args.push(arguments[i]);\n    }\n    \n    if ($workflow.checkParams({\n        \"component\": this, \n        \"methodName\": \"off\", \n        \"args\": args\n        })) {\n        \n        if (state || behaviorId) {\n            if ($metamodel.isValidState(state, this.constructor.name)) {\n                $behavior.remove({\n                    \"behaviorId\": behaviorId, \n                    \"componentId\": this.id(), \n                    \"state\": state\n                });\n            } else { \n                this.require('logger').warn(\"invoke \\'off\\' method of component '\" + this.id() + \"' with an invalid state '\" + state + \"'\"); \n            }\n        } else {\n            $behavior.remove({\n                \"componentId\": this.id()\n            });\n        }\n    }\n}",
			"core": true,
			"useCoreAPI": true
		},
		"1da0a17878104c3": {
			"_id": "1da0a17878104c3",
			"component": "RuntimeComponent",
			"state": "require",
			"action": "function require(id) {\n    return $component.get(id);\n}",
			"core": true,
			"useCoreAPI": true
		},
		"1a5111d17a1800c": {
			"_id": "1a5111d17a1800c",
			"component": "RuntimeDatabase",
			"state": "collections",
			"action": "function collections() {\n    var result = {},\n    collectionName = '';\n    \n    for (collectionName in $db.store) {\n        if ($db.store.hasOwnProperty(collectionName) && collectionName.indexOf('Runtime') !== 0) {\n            result[collectionName] = $db[collectionName];\n            \n        }\n    }\n    return result;\n}",
			"core": true,
			"useCoreAPI": true
		},
		"1e5bf167ca1b61e": {
			"_id": "1e5bf167ca1b61e",
			"component": "RuntimeDatabase",
			"state": "subsystem",
			"action": "function subsystem(params) {\n    return $db.subsystem(params);\n}",
			"core": true,
			"useCoreAPI": true
		},
		"15ab1112e81b1b4": {
			"_id": "15ab1112e81b1b4",
			"component": "RuntimeDatabase",
			"state": "system",
			"action": "function system(system) {\n    return $db.system(system);\n}",
			"core": true,
			"useCoreAPI": true
		},
		"1d993108fa18ef2": {
			"_id": "1d993108fa18ef2",
			"component": "RuntimeLogger",
			"state": "debug",
			"action": "function debug(message) {\n    if (this.level() === 'debug') {\n        console.log('runtime: ' + message);\n    }\n}",
			"core": true
		},
		"1a37a188e11fe73": {
			"_id": "1a37a188e11fe73",
			"component": "RuntimeLogger",
			"state": "error",
			"action": "function error(message) {\n    console.error('runtime: ' + message);\n}",
			"core": true
		},
		"1edd21e12a16534": {
			"_id": "1edd21e12a16534",
			"component": "RuntimeLogger",
			"state": "info",
			"action": "function info(message) {\n    if (this.level() === 'info' || this.level() === 'debug') {\n        console.info('runtime: ' + message);\n    }\n}",
			"core": true
		},
		"141f2143d3122a4": {
			"_id": "141f2143d3122a4",
			"component": "RuntimeLogger",
			"state": "level",
			"action": "function level(val) {\n    $log.level(val);\n}",
			"core": true,
			"useCoreAPI": true
		},
		"192401bab21304e": {
			"_id": "192401bab21304e",
			"component": "RuntimeLogger",
			"state": "warn",
			"action": "function warn(message) {\n    if (this.level() === 'info' || this.level() === 'warn' || this.level() === 'debug') {\n        console.warn('runtime: ' + message);\n    } \n}",
			"core": true
		},
		"11fc715e2f1a31e": {
			"_id": "11fc715e2f1a31e",
			"component": "RuntimeMetamodel",
			"state": "create",
			"action": "function create() {\n        $metamodel.create();\n}",
			"core": true,
			"useCoreAPI": true
		},
		"1232f1f107142cf": {
			"_id": "1232f1f107142cf",
			"component": "RuntimeMetamodel",
			"state": "model",
			"action": "function model(model) {\n    return $metamodel.model(model);\n}",
			"core": true,
			"useCoreAPI": true
		},
		"1365412f69153d2": {
			"_id": "1365412f69153d2",
			"component": "RuntimeMetamodel",
			"state": "schema",
			"action": "function schema(schema) {\n    return $metamodel.schema(schema);\n}",
			"core": true,
			"useCoreAPI": true
		},
		"194db147fe161a2": {
			"_id": "194db147fe161a2",
			"component": "RuntimeMetamodel",
			"state": "type",
			"action": "function type(type) {\n    return $metamodel.type(type);\n}",
			"core": true,
			"useCoreAPI": true
		},
		"129f71568717a22": {
			"_id": "129f71568717a22",
			"component": "RuntimeSystem",
			"state": "sync",
			"action": "function sync() {\n    var system = JSON.parse($db.system());\n    \n    this.schemas(system.schemas);\n    this.types(system.types);\n    this.behaviors(system.behaviors);\n    this.components(system.components);\n}",
			"core": true,
			"useCoreAPI": true
		},
		"1ef951f1411b895": {
			"_id": "1ef951f1411b895",
			"component": "RuntimeOSGi",
			"state": "install",
			"action": "function install(url, async) { \n  var importedSystem = null,\n      system = {},\n      systemId = '',\n      callbackLoad = null,\n      xhr = null,\n      result = '',\n      channel = $component.get('channel');\n\n  if (typeof url === 'object') {\n    importedSystem = url;\n  } else {\n    if (url.indexOf('{') === 0) {\n      importedSystem = JSON.parse(url);\n    }\n  }\n  \n  if (importedSystem) {\n    systemId = this.require('db').system(importedSystem); \n    if (systemId) {\n      system = this.require(systemId);\n      \n      if (typeof url === 'string') {\n        system.location(url);\n      }\n      system.state('installed');    \n      channel.$systemInstalled(systemId);\n      system.state('resolved');\n      channel.$systemResolved(systemId);\n      \n      result = systemId;\n    }\n  } else {   \n    if (typeof global !== 'undefined' && typeof window === 'undefined') {\n      if (url.indexOf('.json') !== -1) {\n        system = global.require(global.process.env.PWD + '/' + url);\n      } else {\n        system = global.require(url);\n      }\n      systemId = this.require('db').system(system);\n      system = this.require(systemId);\n      \n      if (typeof url === 'string') {\n        system.location(url);\n      }\n      system.state('installed');    \n      channel.$systemInstalled(systemId);\n      system.state('resolved');\n      channel.$systemResolved(systemId);\n      \n      result = systemId;\n    } else {\n      xhr = new XMLHttpRequest();\n      callbackLoad = function callbackLoad(system, url) {\n        var sysId = $db.system(system),\n            sys = $component.get(sysId),\n            channel = $component.get('channel');\n            \n        if (typeof url === 'string') {    \n          sys.location(url);    \n        }\n        sys.state('installed');    \n        channel.$systemInstalled(sysId);\n        sys.state('resolved');\n        channel.$systemResolved(sysId);\n        \n        result = sysId;\n      };\n      \n      if (async) {\n        xhr.open('GET', url, true);\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState === 4) {\n            if (xhr.status === 200) {\n              callbackLoad(JSON.parse(xhr.response), url);\n            }\n          }\n        };\n        xhr.send(null);\n      } else {\n        xhr.open('GET', url, false);\n        xhr.send(null);\n        if (xhr.status === 200) {\n          callbackLoad(JSON.parse(xhr.response), url);\n        }\n      }\n    }\n  }\n  return result;\n}",
			"useCoreAPI": true,
			"core": true
		},
		"14c1517b711cb78": {
			"_id": "14c1517b711cb78",
			"component": "RuntimeOSGi",
			"state": "uninstall",
			"action": "function uninstall(id) { \n\tvar search = {},\n\t    system = null,\n\t    behaviorId = '',\n\t    collection =  '',\n\t    componentId = '',\n\t    length = 0,\n\t    i = 0,\n\t    coreComponents = ['admin', 'channel', 'db', 'logger', 'metamodel', 'runtime'];\n\t\n\tsearch = $db.RuntimeSystem.find({\n\t  '_id': id\n\t});\n\t\n\tif (search.length) {\n\t  system = search[0];\n\t  // remove behaviors\n\t  if (system.behaviors) {\n\t    for (behaviorId in system.behaviors) {\n\t      $db.RuntimeBehavior.remove({ \n\t        '_id': system.behaviors[behaviorId]._id\n\t      });\n\t    }\n\t  }\n\t  // remove components\n\t  if (system.components) {\n\t    for (collection in system.components) {\n\t      for (componentId in system.components[collection]) {\n\t        if (coreComponents.indexOf(componentId) === -1) {\n  \t        $db[collection].remove({ \n  \t          '_id': componentId\n  \t        });\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tthis.require(id).state('uninstalled');\n\tchannel.$systemUninstalled(id);\n}",
			"useCoreAPI": true,
			"core": true
		},
		"1cb9d103d41dd97": {
			"_id": "1cb9d103d41dd97",
			"component": "e89c617b6b15d24",
			"state": "start",
			"action": "function start() { \n  var subsystems = [],\n      systems = [],\n      system = null,\n      scripts = [],\n      script = null,\n      logLevel = 'warn',\n      i = 0,\n      length = 0;\n  \n  // in a browser\n  if (typeof document !== 'undefined') {\n      systems = document.querySelectorAll('link[rel=system]');\n      length = systems.length;\n      \n      // logger\n      scripts = document.querySelectorAll('script[log]');\n      if (scripts.length) {\n          logLevel = scripts[0].getAttribute('log');\n          this.require('logger').level(logLevel);\n      }\n      \n      // systems\n      for (i = 0; i < length; i++) {\n          system = systems[i];\n          \n          if (system.getAttribute('async') === 'false') {\n              this.require('runtime').install(system.href, false);\n          } else {\n              this.require('runtime').install(system.href, true);\n          }\n      }\n      \n      // designer\n      scripts = document.querySelectorAll('script[designer]');\n      if (scripts.length) {\n          this.require('admin').start();\n      }\n      \n      // ready event\n      if (length === 0) {\n         this.require('runtime').ready();\n      }\n  }\t\n}",
			"useCoreAPI": true,
			"core": true
		},
		"105f219c6813643": {
			"_id": "105f219c6813643",
			"component": "RuntimeOSGi",
			"state": "start",
			"action": "function start(id) { \n\tvar system = this.require(id),\n\t    channel = this.require('channel');\n\t\n\tif (system.state() === 'resolved' || system.state() === 'installed') {\n  \tsystem.state('starting');\n  \tif (system.main) {\n  \t  system.main();\n  \t}\n  \tif (system.start) {\n  \t  system.start();\n  \t}\n  \tchannel.$systemStarted(id);\n  \tsystem.state('active');\n\t}\n}",
			"useCoreAPI": false,
			"core": true
		},
		"1a81a1f00d17269": {
			"_id": "1a81a1f00d17269",
			"component": "RuntimeOSGi",
			"state": "stop",
			"action": "function stop(id) { \n\tvar system = this.require(id),\n\t    channel = this.require('channel');\n\t    \n\tif (system.state() === 'active') {\n  \tsystem.state('stopping');\n  \tif (system.stop) {\n  \t  system.stop();\n  \t}\n  \tchannel.$systemStopped(id);\n  \tsystem.state('resolved');\n  \tchannel.$systemResolved(id);\n\t}\n}",
			"useCoreAPI": false,
			"core": true
		},
		"116851b602128d1": {
			"_id": "116851b602128d1",
			"component": "RuntimeOSGi",
			"state": "status",
			"action": "function status() { \n\tvar result = {},\n\t    system = null,\n\t    length = 0,\n\t    i = 0;\n\t\n\tsystems = $db.RuntimeSystem.find({});\n\t\n\tlength = systems.length;\n\tfor (i = 0; i < length; i++) {\n\t    system = systems[i];\n\t    result[system.name] = {\n\t      'id': system._id,\n\t      'state': system.state,\n\t      'name': system.name,\n\t      'version': system.version,\n\t      'location': system.location,\n\t      'master': system.master\n\t    };\n\t}\n\t\n\treturn result;\n}",
			"useCoreAPI": true,
			"core": true
		},
		"12e491859c13918": {
			"_id": "12e491859c13918",
			"component": "RuntimeChannel",
			"state": "$systemStarted",
			"action": "function $systemStarted(id) { \n  var systems = null;\n    \n  if (id !== 'e89c617b6b15d24') {\n    if (typeof document !== 'undefined') {\n      systems = document.querySelectorAll('link[rel=system]');\n         \n      if ($state.get('runtime') && $state.get('runtime').name === 'ready') {    \n      } else {\n        if (systems.length + 1 === $db.RuntimeSystem.count()) {\n          $component.get('runtime').ready();\n        }\n      }\n    }\n  }\n}",
			"useCoreAPI": true,
			"core": true
		},
		"1e9021bd4e1bc6e": {
			"_id": "1e9021bd4e1bc6e",
			"component": "RuntimeChannel",
			"state": "$systemInstalled",
			"action": "function $systemInstalled(id) {\n    var systems = null,\n        dependencies = [],\n        master = [],\n        canStart = true;\n\n    if (id !== 'e89c617b6b15d24') {\n      // if all systems are installed\n      systems = $db.RuntimeSystem.find({});\n\n      systems.forEach(function (system) {\n          var sys = this.require(system._id);\n          if (sys.state() === 'none') {\n              canStart = false;\n          }\n      }.bind(this));\n\n      // start all the systems\n      if (canStart) {\n          dependencies = $db.RuntimeSystem.find({\n              'master': false\n          });\n\n          dependencies.forEach(function (dep) {\n              var system = this.require(dep._id);\n              channel = this.require('channel');\n              \n              if (system.state() === 'resolved') {\n                system.state('starting');\n                system.start();\n                channel.$systemStarted(dep._id);\n                system.state('active');\n              }\n          }.bind(this));\n\n          master = $db.RuntimeSystem.find({\n              'master': true\n          });\n\n          master.forEach(function (dep) {\n              var system = this.require(dep._id);\n              channel = this.require('channel');\n              \n              if (system.state() === 'resolved') {\n                system.state('starting');\n                system.start();\n                channel.$systemStarted(dep._id);\n                system.state('active');\n              }\n          }.bind(this));\n      }\n  }\n}",
			"useCoreAPI": true,
			"core": true
		},
		"1cfa4145f614da8": {
			"_id": "1cfa4145f614da8",
			"component": "Runtime",
			"state": "message",
			"action": "function message(msg) { \n\t$db.RuntimeMessage.insert(msg);\n}",
			"useCoreAPI": true,
			"core": true
		},
		"182c51edc31ad97": {
			"_id": "182c51edc31ad97",
			"component": "RuntimeSystemOSGi",
			"state": "uninstall",
			"action": "function uninstall() { \n\tthis.require('runtime').uninstall(this.id());\n}",
			"useCoreAPI": false,
			"core": true
		},
		"15643114f31bf40": {
			"_id": "15643114f31bf40",
			"component": "RuntimeSystemOSGi",
			"state": "state",
			"action": "function state(value) { \n  if (this.require('logger')) {\n\t  this.require('logger').debug('the state of the system \\'' + this.name() + '\\' is now \\'' + value + '\\'');\n  }\t\n}",
			"useCoreAPI": false,
			"core": true
		},
		"19cf317d7217331": {
			"_id": "19cf317d7217331",
			"component": "RuntimeOSGi",
			"state": "bundle",
			"action": "function bundle() { \n\tvar result = this.require('db').system();\n\treturn result;\n}",
			"useCoreAPI": false,
			"core": true
		},
		"14b77144911ce48": {
			"_id": "14b77144911ce48",
			"component": "RuntimeSystemOSGi",
			"state": "bundle",
			"action": "function bundle() { \n\tvar result = '',\n\tsystem = [];\n\t\n\tsystems = $db.RuntimeSystem.find({\n    '_id': this.id()\n  });\n  \n  if (systems.length) {\n    result = JSON.stringify(systems[0]);\n  }\n  \n\treturn result;\n}",
			"useCoreAPI": true,
			"core": true
		}
	},
	"components": {
		"RuntimeAdmin": {
			"admin": {
				"_id": "admin",
				"_core": true,
				"designerWindow": null
			}
		},
		"RuntimeStorage": {
			"storage": {
				"_id": "storage",
				"_core": true
			}
		},
		"Runtime": {
			"runtime": {
				"_id": "runtime",
				"version": "1.8.10"
			}
		},
		"RuntimeDatabase": {
			"db": {
				"_id": "db"
			}
		},
		"RuntimeLogger": {
			"logger": {
				"_id": "logger"
			}
		},
		"RuntimeMetamodel": {
			"metamodel": {
				"_id": "metamodel"
			}
		},
		"RuntimeSystem": {},
		"RuntimeChannel": {
			"channel": {
				"_id": "channel"
			}
		}
	},
	"name": "system-runtime",
	"version": "1.8.10",
	"description": "System Runtime",
	"_id": "e89c617b6b15d24",
	"master": false,
	"subsystem": false
}