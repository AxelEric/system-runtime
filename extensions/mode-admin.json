{
  "models": {
    "138a81fa1f16435": {
      "_id": "138a81fa1f16435",
      "_name": "_Admin",
      "_inherit": [
        "_Component"
      ],
      "_core": true,
      "start": {},
      "designerWindow": {
        "type": "object",
        "readOnly": false,
        "mandatory": false,
        "default": null
      }
    },
    "135c71078810af2": {
      "_id": "135c71078810af2",
      "_name": "_Channel",
      "_inherit": [
        "_Component"
      ],
      "_core": true,
      "$editorUpdateSchemaName": {
        "params": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "id",
            "type": "string"
          }
        ]
      },
      "$designerSync": {},
      "$appLoadSystem": {
        "params": [
          {
            "name": "system",
            "type": "object"
          }
        ]
      },
      "$designerCreateBehavior": {
        "params": [
          {
            "name": "behavior",
            "type": "object"
          }
        ]
      },
      "$editorUpdateBehavior": {
        "params": [
          {
            "name": "id",
            "type": "string"
          },
          {
            "name": "behavior",
            "type": "object"
          }
        ]
      },
      "$designerUpdateBehavior": {
        "params": [
          {
            "name": "id",
            "type": "string"
          },
          {
            "name": "behavior",
            "type": "object"
          }
        ]
      },
      "$editorDeleteBehavior": {
        "params": [
          {
            "name": "id",
            "type": "string"
          }
        ]
      },
      "$designerDeleteBehavior": {
        "params": [
          {
            "name": "id",
            "type": "string"
          }
        ]
      },
      "$designerCreateComponent": {
        "params": [
          {
            "name": "collection",
            "type": "string"
          },
          {
            "name": "component",
            "type": "object"
          }
        ]
      },
      "$editorUpdateComponent": {
        "params": [
          {
            "name": "id",
            "type": "string"
          },
          {
            "name": "collection",
            "type": "string"
          },
          {
            "name": "component",
            "type": "object"
          }
        ]
      },
      "$designerUpdateComponent": {
        "params": [
          {
            "name": "id",
            "type": "string"
          },
          {
            "name": "collection",
            "type": "string"
          },
          {
            "name": "component",
            "type": "object"
          }
        ]
      },
      "$editorDeleteComponent": {
        "params": [
          {
            "name": "id",
            "type": "string"
          },
          {
            "name": "collection",
            "type": "string"
          }
        ]
      },
      "$designerDeleteComponent": {
        "params": [
          {
            "name": "id",
            "type": "string"
          },
          {
            "name": "collection",
            "type": "string"
          }
        ]
      },
      "$designerCreateType": {
        "params": [
          {
            "name": "id",
            "type": "string"
          },
          {
            "name": "type",
            "type": "object"
          }
        ]
      },
      "$editorUpdateType": {
        "params": [
          {
            "name": "id",
            "type": "string"
          },
          {
            "name": "type",
            "type": "object"
          }
        ]
      },
      "$editorDeleteType": {
        "params": [
          {
            "name": "id",
            "type": "string"
          }
        ]
      },
      "$designerCreateSchema": {
        "params": [
          {
            "name": "id",
            "type": "string"
          },
          {
            "name": "schema",
            "type": "object"
          }
        ]
      },
      "$editorUpdateSchema": {
        "params": [
          {
            "name": "id",
            "type": "string"
          },
          {
            "name": "schema",
            "type": "object"
          }
        ]
      },
      "$editorUpdateSchemaId": {
        "params": [
          {
            "name": "oldId",
            "type": "string"
          },
          {
            "name": "newId",
            "type": "string"
          }
        ]
      },
      "$designerDeleteSchema": {
        "params": [
          {
            "name": "id",
            "type": "string"
          }
        ]
      },
      "$designerCreateModel": {
        "params": [
          {
            "name": "id",
            "type": "string"
          },
          {
            "name": "model",
            "type": "object"
          }
        ]
      },
      "$editorUpdateModel": {
        "params": [
          {
            "name": "id",
            "type": "string"
          },
          {
            "name": "model",
            "type": "object"
          }
        ]
      },
      "$designerUpdateModel": {
        "params": [
          {
            "name": "id",
            "type": "string"
          },
          {
            "name": "model",
            "type": "object"
          }
        ]
      },
      "$editorUpdateModelId": {
        "params": [
          {
            "name": "oldId",
            "type": "string"
          },
          {
            "name": "newId",
            "type": "string"
          }
        ]
      },
      "$designerDeleteModel": {
        "params": [
          {
            "name": "id",
            "type": "string"
          }
        ]
      },
      "$editorUpdateSystem": {
        "params": [
          {
            "name": "id",
            "type": "string"
          },
          {
            "name": "system",
            "type": "object"
          }
        ]
      },
      "$appLogDebug": {
        "params": [
          {
            "name": "message",
            "type": "string"
          }
        ]
      },
      "$appLogInfo": {
        "params": [
          {
            "name": "message",
            "type": "string"
          }
        ]
      },
      "$appLogWarn": {
        "params": [
          {
            "name": "message",
            "type": "string"
          }
        ]
      },
      "$appLogError": {
        "params": [
          {
            "name": "message",
            "type": "string"
          }
        ]
      },
      "$runtimeCreateComponent": {
        "params": [
          {
            "name": "collection",
            "type": "string"
          },
          {
            "name": "component",
            "type": "object"
          }
        ]
      },
      "$runtimeDeleteComponent": {
        "params": [
          {
            "name": "id",
            "type": "string"
          },
          {
            "name": "collection",
            "type": "string"
          }
        ]
      },
      "$runtimeUpdateComponent": {
        "params": [
          {
            "name": "id",
            "type": "string"
          },
          {
            "name": "collection",
            "type": "string"
          },
          {
            "name": "field",
            "type": "string"
          },
          {
            "name": "value",
            "type": "any"
          }
        ]
      }
    }
  },
  "schemas": {
    "10374180581a41f": {
      "_id": "10374180581a41f",
      "_name": "_Admin",
      "_inherit": [
        "_Component"
      ],
      "_core": true,
      "designerWindow": "property",
      "start": "method"
    },
    "104ad1f48518376": {
      "_id": "104ad1f48518376",
      "_name": "_Channel",
      "_core": true,
      "$editorUpdateSystem": "event",
      "$editorUpdateSchema": "event",
      "$editorUpdateSchemaId": "event",
      "$editorUpdateSchemaName": "event",
      "$editorUpdateModel": "event",
      "$editorUpdateModelId": "event",
      "$editorUpdateType": "event",
      "$editorDeleteType": "event",
      "$editorUpdateBehavior": "event",
      "$editorDeleteBehavior": "event",
      "$editorUpdateComponent": "event",
      "$editorDeleteComponent": "event",
      "$appLogDebug": "event",
      "$appLogInfo": "event",
      "$appLogWarn": "event",
      "$appLogError": "event",
      "$appLoadSystem": "event",
      "$designerSync": "event",
      "$designerCreateBehavior": "event",
      "$designerCreateComponent": "event",
      "$designerCreateType": "event",
      "$designerCreateSchema": "event",
      "$designerCreateModel": "event",
      "$designerDeleteSchema": "event",
      "$designerDeleteModel": "event",
      "$designerDeleteType": "event",
      "$designerDeleteBehavior": "event",
      "$designerDeleteComponent": "event",
      "$designerUpdateComponent": "event",
      "$designerUpdateModel": "event",
      "$designerUpdateBehavior": "event",
      "$runtimeCreateComponent": "event",
      "$runtimeDeleteComponent": "event",
      "$runtimeUpdateComponent": "event"
    }
  },
  "types": {},
  "behaviors": {
    "1c00c107e01c9b3": {
      "_id": "1c00c107e01c9b3",
      "component": "_Admin",
      "state": "start",
      "action": "function start() {\n  var _Channel = null,\n    channel = null,\n    db = this.require('db');\n\n  if (!this.require('channel-admin')) {\n    _Channel = this.require('_Channel');\n    channel = new _Channel({\n      '_id': 'channel-admin',\n      '_core': true\n    });\n\n    // for jquery compatibility in electron\n    if (typeof global !== 'undefined' && typeof window !== 'undefined') {\n      delete module;\n    }\n\n    channel.on('send', function send(message) {\n      this.require('admin').designerWindow().postMessage(JSON.stringify(message), '*');\n    }, false, true);\n\n    // schema change events\n    channel.on('$designerCreateSchema', function $designerCreateSchema(id, schema) {\n      this.require('logger').level('warn');\n      this.require('metamodel').schema(schema);\n      this.require('metamodel').create();\n      this.require('logger').level('debug');\n    }, true, true);\n\n    channel.on('$editorUpdateSchema', function $editorUpdateSchema(id, schema) {\n      this.require('logger').level('warn');\n      this.require('metamodel').schema(schema);\n      this.require('metamodel').create();\n      this.require('logger').level('debug');\n    }, true, true);\n\n    channel.on('$designerDeleteSchema', function $designerDeleteSchema(id) {\n      this.require('logger').level('warn');\n      var search = $db._Schema.find({ '_id': id }),\n        modelName = '',\n        modelId = '';\n\n      if (search.length) {\n        modelName = search[0]._name;\n        $db._Schema.remove({ '_id': id });\n\n        search = $db._Model.find({ '_name': modelName });\n        if (search.length) {\n          modelId = search[0]._id;\n          $db._Model.remove({ '_id': modelId });\n          $component.removeFromMemory(modelName);\n        }\n\n        search = $db._GeneratedModel.find({ '_name': modelName });\n        if (search.length) {\n          modelId = search[0]._id;\n          $db._GeneratedModel.remove({ '_id': modelId });\n          $component.removeFromMemory(modelName);\n        }\n        this.require('metamodel').create();\n      }\n      this.require('logger').level('debug');\n    }, true, true);\n\n    // model change events\n    channel.on('$designerCreateModel', function $designerCreateModel(id, model) {\n      this.require('logger').level('warn');\n      this.require('metamodel').model(model);\n      this.require('metamodel').create();\n      this.require('logger').level('debug');\n    }, true, true);\n\n    channel.on('$editorUpdateModel', function $editorUpdateModel(id, model) {\n      this.require('logger').level('warn');\n      this.require('metamodel').model(model);\n      this.require('metamodel').create();\n      this.require('logger').level('debug');\n    }, true, true);\n\n    channel.on('$designerUpdateModel', function $designerUpdateModel(id, model) {\n      this.require('logger').level('warn');\n      this.require('metamodel').model(model);\n      this.require('metamodel').create();\n      this.require('logger').level('debug');\n    }, true, true);\n\n    channel.on('$designerDeleteModel', function $designerDeleteModel(id) {\n      this.require('logger').level('warn');\n      var search = $db._Model.find({ '_id': id }),\n        modelName = '',\n        modelId = '';\n\n      if (search.length) {\n        modelName = search[0]._name;\n        $db._Model.remove({ '_id': id });\n        $component.removeFromMemory(modelName);\n      }\n\n      search = $db._GeneratedModel.find({ '_name': modelName });\n      if (search.length) {\n        modelId = search[0]._id;\n        $db._GeneratedModel.remove({ '_id': modelId });\n        $component.removeFromMemory(modelName);\n      }\n      this.require('metamodel').create();\n      this.require('logger').level('debug');\n    }, true, true);\n\n    // type change events\n    channel.on('$designerCreateType', function $designerCreateType(id, type) {\n      this.require('logger').level('warn');\n      this.require('metamodel').type(type);\n      this.require('metamodel').create();\n      this.require('logger').level('debug');\n    }, true, true);\n\n    channel.on('$editorUpdateType', function $editorUpdateType(id, type) {\n      this.require('logger').level('warn');\n      this.require('metamodel').type(type);\n      this.require('metamodel').create();\n      this.require('logger').level('debug');\n\n    }, true, true);\n\n    channel.on('$editorDeleteType', function $editorDeleteType(id) {\n      this.require('logger').level('warn');\n      $db._Type.remove({ 'name': id });\n      this.require('metamodel').create();\n      this.require('logger').level('debug');\n    }, true, true);\n\n    channel.on('$designerDeleteType', function $designerDeleteType(id) {\n      this.require('logger').level('warn');\n      $db._Type.remove({ 'name': id });\n      this.require('metamodel').create();\n      this.require('logger').level('debug');\n    }, true, true);\n\n    // component change events\n    channel.on('$designerCreateComponent', function $designerCreateComponent(model, component) {\n      $db[model].insert(component);\n    }, true, true);\n\n    channel.on('$editorUpdateComponent', function $editorUpdateComponent(id, collection, component) {\n      $db[collection].update({ '_id': id }, component, { 'upsert': true });\n    }, true, true);\n\n    channel.on('$designerUpdateComponent', function $editorUpdateComponent(id, collection, component) {\n      $db[collection].update({ '_id': id }, component, { 'upsert': true });\n    }, true, true);\n\n    channel.on('$editorDeleteComponent', function $editorDeleteComponent(id, collection) {\n      $db[collection].remove({ '_id': id });\n    }, true, true);\n\n    channel.on('$designerDeleteComponent', function $designerDeleteComponent(id, collection) {\n      $db[collection].remove({ '_id': id });\n    }, true, true);\n\n    // behavior change events\n    channel.on('$designerCreateBehavior', function createBehavior(component) {\n      $db._Behavior.insert(component);\n    }, true, true);\n\n    channel.on('$editorUpdateBehavior', function $editorUpdateBehavior(id, behavior) {\n      if (this.require(id)) {\n        this.require(id).action(behavior.action);\n        if (behavior.state === 'start') {\n          this.require(behavior.component).start();\n        }\n      }\n    }, true, true);\n\n    channel.on('$designerUpdateBehavior', function $designerUpdateBehavior(id, behavior) {\n      if (this.require(id)) {\n        this.require(id).action(behavior.action);\n        if (behavior.state === 'start') {\n          this.require(behavior.component).start();\n        }\n      }\n    }, true, true);\n\n    channel.on('$editorDeleteBehavior', function $editorDeleteBehavior(id) {\n      $db._Behavior.remove({ '_id': id });\n    }, true, true);\n\n    channel.on('$designerDeleteBehavior', function $editorDeleteBehavior(id) {\n      $db._Behavior.remove({ '_id': id });\n    }, true, true);\n\n    // System Designer event\n    channel.on('$designerSync', function sync() {\n      var designerWindow = this.require('admin').designerWindow(),\n        system = null;\n\n      this.require('admin').designerWindow(null);\n      system = JSON.parse($db.exportSystem());\n      designerWindow = this.require('admin').designerWindow(designerWindow);\n\n      this.$appLoadSystem(system);\n    }, false, true);\n\n    // Database insert event\n    db.on('insert', function insert(event) {\n      if (event.collection.indexOf('_') !== 0) {\n        this.require('channel').$runtimeCreateComponent(event.collection, event.document);\n      }\n    });\n\n    // Database remove event\n    db.on('remove', function remove(event) {\n      if (event.collection.indexOf('_') !== 0) {\n        this.require('channel').$runtimeDeleteComponent(event.id, event.collection);\n      }\n    });\n\n    // Database update event\n    db.on('update', function update(event) {\n      if (event.collection.indexOf('_') !== 0) {\n        this.require('channel').$runtimeUpdateComponent(event.id, event.collecion, event.field, event.value);\n      }\n    });\n\n    window.addEventListener('message', function (event) {\n      var data = null;\n      try {\n        data = JSON.parse(event.data);\n        if (data &&\n          typeof data.event !== 'undefined' &&\n          typeof data.from !== 'undefined' &&\n          typeof data.data !== 'undefined') {\n          this.designerWindow(event.source);\n          $db._Message.insert(data);\n        }\n      } catch (e) {\n      }\n    }.bind(this), false);\n\n    this.require('logger').info('admin is started');\n  } else {\n    this.require('logger').info('admin is already started');\n  }\n}",
      "useCoreAPI": true,
      "core": true
    },
    "l14c32165e3139b8": {
      "_id": "l14c32165e3139b8",
      "component": "18ed81de331252c",
      "state": "start",
      "action": "function start() {\n  if (typeof document !== 'undefined') {\n    this.require('admin').start();\n  }\n}",
      "useCoreAPI": false,
      "core": false
    }
  },
  "components": {
    "_Admin": {
      "admin": {
        "_id": "admin",
        "_core": true,
        "designerWindow": null
      }
    }
  },
  "name": "admin-mode",
  "version": "1.0.0",
  "description": "Enable connection to System Designer",
  "_id": "18ed81de331252c",
  "master": false,
  "subsystem": false
}