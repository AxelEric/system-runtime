{
  "_id": "d16ce01d87b1714a",
  "name": "class_component",
  "description": "Component",
  "version": "1.0.0",
  "behaviors": {
    "1ba721201114b6b": {
      "_id": "1ba721201114b6b",
      "component": "_Component",
      "state": "destroy",
      "action": "function destroy() {\n  $component.destroy(this.id());\n}",
      "core": true,
      "useCoreAPI": true
    },
    "15486186f41a48c": {
      "_id": "15486186f41a48c",
      "component": "_Component",
      "state": "off",
      "action": "function off(state, behaviorId) {\n  var args = [],\n    i = 0,\n    length = arguments.length;\n\n  for (i = 0; i < length - 7; i++) {\n    args.push(arguments[i]);\n  }\n\n  if ($workflow.checkParams({\n    \"component\": this,\n    \"methodName\": \"off\",\n    \"args\": args\n  })) {\n\n    if (state || behaviorId) {\n      if ($metamodel.isValidState(state, this.constructor.name)) {\n        $behavior.remove({\n          \"behaviorId\": behaviorId,\n          \"componentId\": this.id(),\n          \"state\": state\n        });\n      } else {\n        this.require('logger').warn(\"invoke \\'off\\' method of component '\" + this.id() + \"' with an invalid state '\" + state + \"'\");\n      }\n    } else {\n      $behavior.remove({\n        \"componentId\": this.id()\n      });\n    }\n  }\n}",
      "core": true,
      "useCoreAPI": true
    },
    "1da0a17878104c3": {
      "_id": "1da0a17878104c3",
      "component": "_Component",
      "state": "require",
      "action": "function require(id) {\n  return $component.get(id);\n}",
      "core": true,
      "useCoreAPI": true
    }
  },
  "schemas": {
    "111df11e2b19fde": {
      "_id": "111df11e2b19fde",
      "_name": "_Component",
      "_inherit": [],
      "_core": true,
      "classInfo": "property",
      "on": "method",
      "off": "method",
      "require": "method",
      "destroy": "method",
      "init": "method",
      "error": "event"
    }
  },
  "models": {
    "123751cb591de26": {
      "_id": "123751cb591de26",
      "_name": "_Component",
      "_core": true,
      "on": {
        "params": [
          {
            "name": "state",
            "type": "string"
          },
          {
            "name": "handler",
            "type": "function"
          },
          {
            "name": "useCoreAPI",
            "type": "boolean",
            "mandatory": false,
            "default": false
          },
          {
            "name": "isCore",
            "type": "boolean",
            "mandatory": false,
            "default": false
          }
        ]
      },
      "off": {
        "params": [
          {
            "name": "state",
            "type": "string",
            "mandatory": false
          },
          {
            "name": "behaviorId",
            "type": "string",
            "mandatory": false
          }
        ]
      },
      "require": {
        "params": [
          {
            "name": "id",
            "type": "string"
          }
        ]
      },
      "destroy": {
        "params": []
      },
      "classInfo": {
        "type": "@_ClassInfo",
        "readOnly": false,
        "mandatory": false,
        "default": {}
      },
      "init": {
        "params": [
          {
            "name": "conf",
            "type": "object"
          }
        ]
      },
      "error": {
        "params": [
          {
            "name": "data",
            "type": "errorParam"
          }
        ]
      }
    }
  },
  "types": {},
  "components": {},
  "master": false
}