{
  "_id": "o10d691259c128c9",
  "name": "class-runtime-ogsi",
  "description": "Runtime OSGI",
  "version": "1.0.0",
  "behaviors": {
    "1ef951f1411b895": {
      "_id": "1ef951f1411b895",
      "component": "RuntimeOSGi",
      "state": "install",
      "action": "function install(url, async) { \n  var importedSystem = null,\n      system = {},\n      systemId = '',\n      callbackLoad = null,\n      xhr = null,\n      result = '',\n      channel = $component.get('channel');\n\n  if (typeof url === 'object') {\n    importedSystem = url;\n  } else {\n    if (url.indexOf('{') === 0) {\n      importedSystem = JSON.parse(url);\n    }\n  }\n  \n  if (importedSystem) {\n    systemId = this.require('db').system(importedSystem); \n    if (systemId) {\n      system = this.require(systemId);\n      \n      if (typeof url === 'string') {\n        system.location(url);\n      }\n      system.state('installed');    \n      channel.$systemInstalled(systemId);\n      system.state('resolved');\n      channel.$systemResolved(systemId);\n      \n      result = systemId;\n    }\n  } else {   \n    if (typeof global !== 'undefined' && typeof window === 'undefined') {\n      if (url.indexOf('.json') !== -1) {\n        system = global.require(global.process.env.PWD + '/' + url);\n      } else {\n        system = global.require(url);\n      }\n      systemId = this.require('db').system(system);\n      system = this.require(systemId);\n      \n      if (typeof url === 'string') {\n        system.location(url);\n      }\n      system.state('installed');    \n      channel.$systemInstalled(systemId);\n      system.state('resolved');\n      channel.$systemResolved(systemId);\n      \n      result = systemId;\n    } else {\n      xhr = new XMLHttpRequest();\n      callbackLoad = function callbackLoad(system, url) {\n        var sysId = $db.system(system),\n            sys = $component.get(sysId),\n            channel = $component.get('channel');\n            \n        if (typeof url === 'string') {    \n          sys.location(url);    \n        }\n        sys.state('installed');    \n        channel.$systemInstalled(sysId);\n        sys.state('resolved');\n        channel.$systemResolved(sysId);\n        \n        result = sysId;\n      };\n      \n      if (async) {\n        xhr.open('GET', url, true);\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState === 4) {\n            if (xhr.status === 200) {\n              callbackLoad(JSON.parse(xhr.response), url);\n            }\n          }\n        };\n        xhr.send(null);\n      } else {\n        xhr.open('GET', url, false);\n        xhr.send(null);\n        if (xhr.status === 200) {\n          callbackLoad(JSON.parse(xhr.response), url);\n        }\n      }\n    }\n  }\n  return result;\n}",
      "useCoreAPI": true,
      "core": true
    },
    "14c1517b711cb78": {
      "_id": "14c1517b711cb78",
      "component": "RuntimeOSGi",
      "state": "uninstall",
      "action": "function uninstall(id) { \n\tvar search = {},\n\t    system = null,\n\t    behaviorId = '',\n\t    collection =  '',\n\t    componentId = '',\n\t    length = 0,\n\t    i = 0,\n\t    coreComponents = ['admin', 'channel', 'db', 'logger', 'metamodel', 'runtime'];\n\t\n\tsearch = $db.RuntimeSystem.find({\n\t  '_id': id\n\t});\n\t\n\tif (search.length) {\n\t  system = search[0];\n\t  // remove behaviors\n\t  if (system.behaviors) {\n\t    for (behaviorId in system.behaviors) {\n\t      $db.RuntimeBehavior.remove({ \n\t        '_id': system.behaviors[behaviorId]._id\n\t      });\n\t    }\n\t  }\n\t  // remove components\n\t  if (system.components) {\n\t    for (collection in system.components) {\n\t      for (componentId in system.components[collection]) {\n\t        if (coreComponents.indexOf(componentId) === -1) {\n  \t        $db[collection].remove({ \n  \t          '_id': componentId\n  \t        });\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tthis.require(id).state('uninstalled');\n\tchannel.$systemUninstalled(id);\n}",
      "useCoreAPI": true,
      "core": true
    },
    "105f219c6813643": {
      "_id": "105f219c6813643",
      "component": "RuntimeOSGi",
      "state": "start",
      "action": "function start(id) { \n\tvar system = this.require(id),\n\t    channel = this.require('channel');\n\t\n\tif (system.state() === 'resolved' || system.state() === 'installed') {\n  \tsystem.state('starting');\n  \tif (system.main) {\n  \t  system.main();\n  \t}\n  \tif (system.start) {\n  \t  system.start();\n  \t}\n  \tchannel.$systemStarted(id);\n  \tsystem.state('active');\n\t}\n}",
      "useCoreAPI": false,
      "core": true
    },
    "1a81a1f00d17269": {
      "_id": "1a81a1f00d17269",
      "component": "RuntimeOSGi",
      "state": "stop",
      "action": "function stop(id) { \n\tvar system = this.require(id),\n\t    channel = this.require('channel');\n\t    \n\tif (system.state() === 'active') {\n  \tsystem.state('stopping');\n  \tif (system.stop) {\n  \t  system.stop();\n  \t}\n  \tchannel.$systemStopped(id);\n  \tsystem.state('resolved');\n  \tchannel.$systemResolved(id);\n\t}\n}",
      "useCoreAPI": false,
      "core": true
    },
    "116851b602128d1": {
      "_id": "116851b602128d1",
      "component": "RuntimeOSGi",
      "state": "status",
      "action": "function status() { \n\tvar result = {},\n\t    system = null,\n\t    length = 0,\n\t    i = 0;\n\t\n\tsystems = $db.RuntimeSystem.find({});\n\t\n\tlength = systems.length;\n\tfor (i = 0; i < length; i++) {\n\t    system = systems[i];\n\t    result[system.name] = {\n\t      'id': system._id,\n\t      'state': system.state,\n\t      'name': system.name,\n\t      'version': system.version,\n\t      'location': system.location,\n\t      'master': system.master\n\t    };\n\t}\n\t\n\treturn result;\n}",
      "useCoreAPI": true,
      "core": true
    },
    "19cf317d7217331": {
      "_id": "19cf317d7217331",
      "component": "RuntimeOSGi",
      "state": "bundle",
      "action": "function bundle() { \n\tvar result = this.require('db').system();\n\treturn result;\n}",
      "useCoreAPI": false,
      "core": true
    }
  },
  "schemas": {
    "157931f7a31b61d": {
      "_id": "157931f7a31b61d",
      "_name": "RuntimeOSGi",
      "_inherit": [
        "RuntimeComponent"
      ],
      "_core": true,
      "install": "method",
      "uninstall": "method",
      "start": "method",
      "stop": "method",
      "status": "method",
      "bundle": "method"
    }
  },
  "models": {
    "100b91ed2211b15": {
      "_id": "100b91ed2211b15",
      "_name": "RuntimeOSGi",
      "install": {
        "params": [
          {
            "name": "url",
            "type": "any",
            "mandatory": true,
            "default": ""
          },
          {
            "name": "async",
            "type": "boolean",
            "mandatory": false,
            "default": true
          }
        ],
        "result": "string"
      },
      "uninstall": {
        "params": [
          {
            "name": "id",
            "type": "string",
            "mandatory": true,
            "default": ""
          }
        ]
      },
      "start": {
        "params": [
          {
            "name": "id",
            "type": "string",
            "mandatory": true,
            "default": ""
          }
        ]
      },
      "stop": {
        "params": [
          {
            "name": "id",
            "type": "string",
            "mandatory": true,
            "default": ""
          }
        ]
      },
      "status": {
        "result": "object"
      },
      "_core": true,
      "bundle": {
        "result": "string"
      }
    }
  },
  "types": {},
  "components": {},
  "master": false,
  "subsystem": false
}